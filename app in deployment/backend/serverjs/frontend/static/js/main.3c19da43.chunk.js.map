{"version":3,"sources":["components/administrare/componenteNavBar/TabComponents/administrareTab.jsx","components/administrare/componenteNavBar/TabComponents/ProblemeImprimanteTab.jsx","components/administrare/componenteNavBar/TabComponents/RapoarteTab.jsx","components/administrare/NavBar/NavBar.jsx","actions/authValidateAction.js","components/administrare/componenteNavBar/Login/login.jsx","components/administrare/ModalComponent/ModalWindow.jsx","components/administrare/componenteNavBar/IntroducereMagazinNou/IntroducereMagazinNou.jsx","components/administrare/componenteTemplate/VizualizareGeneralaStergere/RenderComponent.jsx","components/administrare/componenteTemplate/VizualizareGeneralaStergere/RenderTableViewDelete.jsx","components/administrare/componenteNavBar/vizualizarelistaremagazine/VizualizareListareMagazine.jsx","components/administrare/componenteNavBar/IntroducereImprimantaNoua/IntroducereImprimantaNoua.jsx","components/administrare/componenteNavBar/IntroducereUserNou/IntroducereUserNou.jsx","components/administrare/componenteNavBar/VizualizareListareImprimante/VizualizareListareImprimante.jsx","components/administrare/componenteNavBar/VizualizareListareUseri/VizualizareListareUseri.jsx","components/administrare/componenteTemplate/ComponentaUpdateGeneral/RenderComponent.jsx","components/administrare/componenteTemplate/ComponentaUpdateGeneral/ComponentaUpdateGeneral.jsx","components/administrare/componenteNavBar/UpdatareInformatii/UpdatareInformatii.jsx","components/ProblemeImprimante/SesizareProblemaNoua/SesizareProblemaNoua.jsx","components/administrare/componenteNavBar/IntroducereReparatie/RenderJobReparatie.jsx","components/administrare/componenteNavBar/IntroducereReparatie/IntroducereReparatie.jsx","components/administrare/componenteTemplate/componentaVizualizareGenerala/RenderComponent.jsx","components/administrare/componenteTemplate/componentaVizualizareGenerala/RenderTableView.jsx","components/Rapoarte/PretReparatiiImprimante/PretReparatiiImprimante.jsx","components/Rapoarte/PretReparatiiMagazin/PretReparatiiMagazin.jsx","components/Rapoarte/VizualizareIstorieImprimanteMagazin/ComponentaVizualizarePerSelectMagazine/ComponentaVizualizarePerSelectMagazine.jsx","components/Rapoarte/VizualizareIstorieImprimanteMagazin/VizualizareImprimanteMagazin.jsx","components/Rapoarte/VizualizareIstorieImprimante/ComponentaVizualizarePerSelectImprimante/ComponentaVizualizarePerSelectMagazine.jsx","components/Rapoarte/VizualizareIstorieImprimante/VizualizareIstorieImprimante.jsx","components/Rapoarte/VizualizareReparatiiImprimanta/ComponentaVizualizarePerSelectImprimante/ComponentaVizualizarePerSelectMagazine.jsx","components/Rapoarte/VizualizareReparatiiImprimanta/VizualizareReparatiiImprimanta.jsx","App.js","reducers/authReducer.js","reducers/rootReducer.js","index.js"],"names":["AdministrareTab","react_default","a","createElement","className","react_router_dom","data-toggle","to","role","refresh","ProblemeImprimanteTab","RapoarteTab","connect","state","auth","props","handleLogout","e","sessionStorage","clear","src","alt","credentials","username","token","administrareTab","TabComponents_ProblemeImprimanteTab","TabComponents_RapoarteTab","toUpperCase","onClick","href","authValidateAction","dispatch","getState","message","password","origin","window","axios","post","then","response","console","log","_response$data","data","newState","Object","assign","type","setItem","updateStorage","catch","err","Login","handleSubmit","preventDefault","document","getElementById","value","_this","sendAuth","handleChange","setState","defineProperty","target","id","handleClose","history","push","this","onSubmit","placeholder","onChange","htmlFor","Component","ModalWindow","$","on","css","resetState","html","Body","Title","IntroducereMagazinNou","nume_magazin","locatie_magazin","result","validateCount","modal_state","modal_title","modal_body","objectSpread","formValidator","msg","allOK","i","val","text","newObj","payload","self","assertThisInitialized","res","JSON","parse","addClass","handleBackButton","loginComponent","getItem","ModalComponent_ModalWindow","RenderComponent","index","sqlTableFildsList","map","indexitem","key","item","RenderTableViewDelete","viewTableFildsList","sqlcommand","storelist","toDeleteList","table_name","deleteListIndexBy","getTableRequestedData","removeClass","newObjj","toConsumableArray","postTableRequestedData","newDelete","returnTableHeader","handleClickChange","parrentId","hasClass","filter","concat","length","_this2","componentTitle","VizualizareGeneralaStergere_RenderComponent","colSpan","VizualizareListareMagazine","VizualizareGeneralaStergere_RenderTableViewDelete","IntroducereImprimantaNoua","date","ListaOptiuniStatusImprimante","getOptionsList","optiuniImprimanta","is","disabledText","find","printer_brand","printer_model","printer_sn","store_id_name","printer_status","printer_list_price","printer_installed_date","changed_by","datepicker","storeModal","defaultValue","disabled","stareImprimanta","option_name","_this3","_JSON$parse4","store_location","error","today","Date","IntroducereUserNou","user_name","user_password","user_role","userRole","userComponent","VizualizareListareImprimante","VizualizareListareUseri","editableFields","onBlur","handleBlur","onFocus","handleFocus","handleTypeChange","ComponentaUpdateGeneral","storelistMap","changedInfo","jsonTable","suggestionInfoToGetFromTable","suggestionInfoUserUpdate","suggestionInfoUpdateImprimante","sqlCommandToUpdateRecords","sqlCommandToUpdateHistory","UpdateSqlRecords","rowAffected","after","storeChanges","setTimeout","updateHistory","resetFieldsInfo","getSuggestionInfo","request","parsedStore_location","store_name","nextProps","resetFieldsInfoBtn","testOK","_loop","j","fields","currentValue","attr","includes","testresult","sBox","trim","parseInt","toString","finalTable","json","updateSql","existingStoreName","existingPrinterStatus","historyChange","_loop2","temp","temp2","_loop3","val2","storeConvert","store_id","substring","sqlUpdatesList","split","sqlCommand","sendTrimisaLaMagazinEmail","emailTemplate","_ref","sendEmail","configEmail","tid","suggesteVal","inputVal","sulist","startsWith","remove","_ref2","emailList","forEach","store","emailMsg","emailSubject","emailToAddress","ComponentaUpdateGeneral_RenderComponent","UpdatareInformatii","selected_function","handleChangeSelect","selectedOption","functionSelect","bind","componenteTemplate_ComponentaUpdateGeneral_ComponentaUpdateGeneral","SesizareProblemaNoua","logProblemOptions","nuGasescSerie","detaliiImprimanta","foundPrinters","handleSelectPrinterSN","status_sesizare","prop","validatorPrinterSN","componentDidUpdate","printerSn","title","printerSnDBSearch","cautareImprimanta","handleStoreChange","handleClick","printer_id","isEmpty","field","introduSesizareNoua","adaugaSesizareInSistem","problem_options_name","sesizari_log_problem_description","sesizari_log_problem","new_printer_sn","Math","floor","random","updateStateStoreList","th","updateStateLogProblemOptions","componentaNuGasescImprimanta","_JSON$parse5","listaMagazine","found","listaOptiuniProbleme","sesizareComponent","rows","RenderJobReparatie","serieGenerica","currentSelectedSesizare","isNaN","introducereReparatieInTabele","reparatie","repair_parts_fitted","repair_info","repair_cost","setChildEmpty","updateReparatieResult","moment","require","handleSubmitReparatie","dateandtime","format","selectedObject","repartieInfo","repair_counter","repair_date","sesizari_log_id","printers_history_date","handleAlegeStatusImprimanta","StatusImprimanta","printer_select_options","serieImprimanta","sesizari_log_date","IntroducereReparatie","listaSesizari","hasUserChoosenSesizare","populateSesizari","_JSON$parse2","handleAlegeSesizareSelect","obj","selectareSesizare","mainComponent","IntroducereReparatie_RenderJobReparatie","RenderTableView","returnTableBody","forceUpdate","convertToCSV","array","list","stringify","csv","d","values","join","replace","download","body","appendChild","click","componentaVizualizareGenerala_RenderComponent","PretReparatiiImprimante","componentaVizualizareGenerala_RenderTableView","PretReparatiiMagazin","ComponentaVizualizarePerSelectMagazine","storelistNameID","handleAlegeMagazinSelect","VizualizareIstorieImprimanteMagazin","storeInfo","getStoreList","_JSON$parse","VizualizareIstorieImprimanteMagazin_ComponentaVizualizarePerSelectMagazine_ComponentaVizualizarePerSelectMagazine","ComponentaVizualizarePerSelectImprimante","printerlistNameID","handleAlegeImprimantaSelect","VizualizareIstorieImprimante","prin_id","getPrinterList","printer_list","ComponentaVizualizarePerSelectImprimante_ComponentaVizualizarePerSelectMagazine","VizualizareReparatiiImprimanta","VizualizareReparatiiImprimanta_ComponentaVizualizarePerSelectImprimante_ComponentaVizualizarePerSelectMagazine","App","administrare_NavBar_NavBar","react_router","path","component","exact","initState","authReducer","arguments","undefined","action","collectAuthFromSession","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.3c19da43.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst AdministrareTab = () => {\r\n    return (\r\n        <li className=\"dropdown\" >\r\n            <NavLink className=\"dropdown-toggle\" data-toggle=\"dropdown\" to=\"/\"><span>Administrare</span>&nbsp;<span className=\"caret\"></span></NavLink>\r\n            <ul className=\"dropdown-menu\">\r\n                <li className=\"dropdown-header allline\">Updatare</li>\r\n                <li className=\"halfSpace\"><Link to=\"/UpdatareInformatii\">Updatare Informatii</Link></li>\r\n                <li role=\"separator\" className=\"divider\"></li>\r\n                <li className=\"dropdown-header allline\">Introducere Informatii</li>\r\n                <li className=\"halfSpace\"><Link to=\"/IntroducereImprimantaNoua\" refresh=\"true\">Introducere Imprimanta Noua</Link></li>\r\n                <li className=\"halfSpace\"><Link to=\"/IntroducereMagazinNou\">Introducere Magazin Nou</Link></li>\r\n                <li className=\"halfSpace\"><Link to=\"/IntroducereUserNou\">Introducere User Nou</Link></li>\r\n                <li className=\"halfSpace\"><Link to=\"/IntroducereReparatie\">Introducere Reparatie</Link></li>\r\n                <li role=\"separator\" className=\"divider\"></li>\r\n                <li className=\"dropdown-header allline\">Vizualizare Date</li>\r\n                <li className=\"allline\"><Link to=\"/VizualizareListareMagazine\">Listare/Stergere Magazine</Link></li>\r\n                <li className=\"allline\"><Link to=\"/VizualizareListareUseri\">Listare/Stergere Useri</Link></li>\r\n                <li className=\"allline\"><Link to=\"/VizualizareListareImprimante\">Listare/Stergere Imprimante</Link></li>\r\n            </ul>\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default AdministrareTab\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst ProblemeImprimanteTab = () => {\r\n    return (\r\n        <li className=\"dropdown\">\r\n            <NavLink className=\"dropdown-toggle\" data-toggle=\"dropdown\" to=\"/\"><span>Probleme Imprimante</span>&nbsp;<span className=\"caret\"></span></NavLink>\r\n            <ul className=\"dropdown-menu bold\">\r\n                <li className=\"dropdown-header allline\">Sesizeaza o problema</li>\r\n                <li><Link to=\"/SesizareProblemaNoua\">Sesizare Problema Noua</Link></li>\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ProblemeImprimanteTab\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst RapoarteTab = () => {\r\n    return (\r\n        <li className=\"dropdown\">\r\n            <NavLink className=\"dropdown-toggle\" data-toggle=\"dropdown\" to=\"/\"><span>Rapoarte</span>&nbsp;<span className=\"caret\"></span></NavLink>\r\n            <ul className=\"dropdown-menu bold\">\r\n                <li className=\"dropdown-header allline\">Vizializare Rapoarte</li>\r\n                <li className=\"allline\"><Link to=\"/PretReparatiiImprimante\">Pret reparatii / imprimante</Link></li>\r\n                <li className=\"allline\"><Link to=\"/PretReparatiiMagazin\">Pret reparatii / magazin</Link></li>\r\n                <li className=\"allline\"><Link to=\"/VizualizareIstorieImprimanteMagazin\">Vizualizare Istoric Imprimante / Magazin</Link></li>\r\n                <li className=\"allline\"><Link to=\"/VizualizareIstorieImprimante\">Vizualizare Istoric Imprimante</Link></li>\r\n                <li className=\"allline\"><Link to=\"/VizualizareReparatiiImprimanta\">Vizualizare Reparatii / Imprimanta</Link></li>\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default RapoarteTab\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport AdministrareTab from '../componenteNavBar/TabComponents/administrareTab'\r\nimport ProblemeImprimanteTab from '../componenteNavBar/TabComponents/ProblemeImprimanteTab'\r\nimport RapoarteTab from '../componenteNavBar/TabComponents/RapoarteTab'\r\n\r\nconst NavBar = (props) => {\r\n  function LoginValidation() {\r\n    if (props.state.credentials.username && props.state.credentials.token && props.state.credentials.role) {\r\n      if (props.state.credentials.role === \"admin\")\r\n        return (\r\n          <ul className=\"nav navbar-nav \">\r\n            <AdministrareTab />\r\n            <ProblemeImprimanteTab />\r\n            <RapoarteTab />\r\n          </ul>\r\n        )\r\n      else if (props.state.credentials.role === \"storeraport\")\r\n        return (<ul className=\"nav navbar-nav \">\r\n          <ProblemeImprimanteTab />\r\n          <RapoarteTab />\r\n        </ul>)\r\n      else if (props.state.credentials.role === \"store\")\r\n        return (<ul className=\"nav navbar-nav \"><ProblemeImprimanteTab /></ul>)\r\n      else if (props.state.credentials.role === \"raport\")\r\n        return (<ul className=\"nav navbar-nav \"><RapoarteTab /></ul>)\r\n    }\r\n    else\r\n      return \"\";\r\n  }\r\n\r\n  const handleLogout = (e) => {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  function CheckLogin() {\r\n    if (props.state.credentials.username && props.state.credentials.token && props.state.credentials.role) {\r\n      return (\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li><Link to=\"/\" className=\"\"><span className=\"glyphicon glyphicon-user\"></span>&nbsp;<span >{props.state.credentials.username.toUpperCase()}</span></Link></li>\r\n          <li><a onClick={handleLogout} href=\"/\"><span className=\"glyphicon glyphicon-log-in\"></span> &nbsp;Log Out</a></li>\r\n        </ul>)\r\n    } else return (\r\n      <ul className=\"nav navbar-nav navbar-right\">\r\n        <li><Link to=\"/Login\"><span className=\"glyphicon glyphicon-user\"></span> &nbsp;Log In</Link></li></ul>)\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-default padding\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <img src=\"../img/unicarm_logo.png\" className=\"img img-logo\" alt=\"Unicarm logo\" />\r\n            <span className=\"logo\">Unicarm Printer Monitor</span>\r\n          </Link>\r\n        </div>\r\n\r\n        <LoginValidation />\r\n\r\n        <CheckLogin />\r\n\r\n      </div>\r\n    </nav >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state.auth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(NavBar)\r\n","import axios from 'axios'\r\nconst authValidateAction = (state) => {\r\n\r\n    function updateStorage(token, role, username) {\r\n        sessionStorage.setItem('token', token);\r\n        sessionStorage.setItem('role', role);\r\n        sessionStorage.setItem('user_name', username);\r\n    }\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        // let token = \"token\";\r\n        // let role = \"admin\";\r\n        // //console.log(\"username: \", state.username);\r\n        // let username = state.username;\r\n        //updateStorage(token, role, username);\r\n\r\n        let message = {\r\n            username: state.username,\r\n            password: state.password\r\n        }\r\n        //console.log(message);\r\n        let origin = window.origin;\r\n        //let origin = 'http://localhost:9000';\r\n        // axios.post(origin + '/imprimanteunicarm/backend/php/login_auth.php', message)\r\n        axios.post(origin + '/api/login_auth', message)\r\n            .then(function (response) {\r\n                console.log(\"response from auth : \", response);\r\n                const { auth, token, role } = response.data;\r\n                if (auth === \"ok\") {\r\n                    if (role !== \"admin\" && role !== \"store\" && role !== \"raport\" && role !== \"storeraport\") {\r\n                        let newState = Object.assign({}, { type: 'userauth' }, { credentials: { username: \"\", token: \"\", role: \"\" } });\r\n                        dispatch(newState);\r\n                    } else {\r\n                        let username = state.username;\r\n                        updateStorage(token, role, username);\r\n                        let credentials = Object.assign({}, {\r\n                            username: username, token: token, role: role\r\n                        })\r\n\r\n                        let newState = Object.assign({}, { type: 'userauth' }, { credentials });\r\n                        //console.log(\"new state:\", newState);\r\n                        dispatch(newState);\r\n                        //console.log(response);\r\n                    }\r\n                } else {\r\n                    let newState = Object.assign({}, { type: 'userauth' }, { credentials: { username: \"\", token: \"\", role: \"\" } });\r\n                    dispatch(newState);\r\n                }\r\n\r\n            }).catch(err => {\r\n                console.log(err);\r\n                return null;\r\n            });\r\n    }\r\n}\r\n\r\nexport default authValidateAction;","import React, { Component } from 'react'\r\nimport './Login.css'\r\nimport { connect } from 'react-redux'\r\nimport authValidateAction from '../../../../actions/authValidateAction'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: \"\", password: \"\"\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        document.getElementById(\"username\").value = \"\";\r\n        document.getElementById(\"password\").value = \"\";\r\n        this.props.sendAuth(Object.assign({}, this.state));\r\n        //console.log(this.state)\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.state.token !== \"\") this.props.history.push('/');\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.state.token !== \"\") this.props.history.push('/');\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginpopup\">\r\n                <div className=\"wrapper-login\">\r\n                    <div className=\"x\" onClick={this.handleClose}>X</div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control login-form-control\" id=\"username\" placeholder=\"User\" onChange={this.handleChange} />\r\n                            <label className=\"labelControl\" htmlFor=\"username\" >User</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" className=\"form-control login-form-control\" id=\"password\" placeholder=\"Parola\" onChange={this.handleChange} />\r\n                            <label className=\"labelControl\" htmlFor=\"password\" >Parola</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"center\">\r\n                                <button type=\"submit\" className=\"btn btn-default\" onClick={this.handleSubmit}>Login</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendAuth: (state) => dispatch(authValidateAction(state))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        state: state.auth.credentials\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './modal.css'\r\nimport $ from 'jquery'\r\n\r\n\r\n/*\r\n-important de pus in clasa unde se doreste a fi introdus modalul\r\n-validateCount: xxx - how many fields you want to validate\r\n--------------------------------------------------------\r\nimport $ from 'jquery'\r\nimport ModalWindow from '../../ModalComponent/ModalWindow'\r\n--------------------------------------------------------\r\n        validateCount: 2,\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\"\r\n--------------------------------------------------------\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n\r\n    }\r\n--------------------------------------------------------\r\n\r\n   formValidator = () => {\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            //validatefieldmsg1\r\n            //alert($('.validatefield' + i).is(\"select\"))\r\n            if ($('.validatefield' + i).is(\"select\")) {\r\n                let disabledText = $('.validatefield' + i + ' option[disabled]:selected').val();\r\n                let selectedVal = $('.validatefield' + i).find(\":selected\").val();\r\n                if (selectedVal === disabledText) {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            } else {\r\n                if ($(\".validatefield\" + i).val() === \"\") {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n--------------------------------------------------------\r\nlet allOK = this.formValidator();\r\n        if (allOK) {\r\n\r\n        }\r\n--------------------------------------------------------\r\n-add below to last div in component\r\n{this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n--------------------------------------------------------\r\n\r\nthan to form you want to validate add belod id and class\r\n<label id=\"validatefieldmsg1\" className=\"text-info text-medium\" htmlFor=\"user_name\">*Nume User</label>\r\n<input onChange={this.handleChange} type=\"text\" className=\"validatefield1 form-control\" id=\"user_name\" placeholder=\"Nume Magazin\" />\r\n\r\n*/\r\n\r\nclass ModalWindow extends Component {\r\n\r\n    componentDidMount() {\r\n        $('.close').on('click', () => {\r\n            $('.overlay').css(\"visibility\", \"hidden\");\r\n            this.props.resetState();\r\n        })\r\n        $('.btn-ok').on('click', () => {\r\n            $('.overlay').css(\"visibility\", \"hidden\");\r\n            this.props.resetState();\r\n        })\r\n        $(\".content\").html(this.props.Body);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"popup1\" className=\"overlay\">\r\n                    <div className=\"popup\">\r\n                        <br />\r\n                        <br />\r\n                        <h2>{this.props.Title}</h2>\r\n                        <div className=\"close\" >X</div>\r\n                        <div className=\"content text-info\">\r\n                        </div>\r\n                        <br /><br />\r\n                        <button className=\"btn-ok btn btn-primary\" >OK</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalWindow\r\n","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport axios from 'axios'\r\nimport ModalWindow from '../../ModalComponent/ModalWindow'\r\n// import updatesAction from '../../../../actions/updatesAction'\r\n// import {connect} from \r\n\r\n/*\r\n-important de pus in clasa unde se doreste a fi introdus modalul\r\n-validateCount: xxx - how many fields you want to validate\r\n--------------------------------------------------------\r\nimport $ from 'jquery'\r\nimport ModalWindow from '../../ModalComponent/ModalWindow'\r\n--------------------------------------------------------\r\n        validateCount: 2,\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\"\r\n--------------------------------------------------------\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n\r\n    }\r\n--------------------------------------------------------\r\n\r\n   formValidator = () => {\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            //validatefieldmsg1\r\n            //alert($('.validatefield' + i).is(\"select\"))\r\n            if ($('.validatefield' + i).is(\"select\")) {\r\n                let disabledText = $('.validatefield' + i + ' option[disabled]:selected').val();\r\n                let selectedVal = $('.validatefield' + i).find(\":selected\").val();\r\n                if (selectedVal === disabledText) {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            } else {\r\n                if ($(\".validatefield\" + i).val() === \"\") {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n--------------------------------------------------------\r\nlet allOK = this.formValidator();\r\n        if (allOK) {\r\n\r\n        }\r\n--------------------------------------------------------\r\n-add below to last div in component\r\n{this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n--------------------------------------------------------\r\n\r\nthan to form you want to validate add belod id and class\r\n<label id=\"validatefieldmsg1\" className=\"text-info text-medium\" htmlFor=\"user_name\">*Nume User</label>\r\n<input onChange={this.handleChange} type=\"text\" className=\"validatefield1 form-control\" id=\"user_name\" placeholder=\"Nume Magazin\" />\r\n\r\n*/\r\n\r\nclass IntroducereMagazinNou extends Component {\r\n    state = {\r\n        nume_magazin: \"\",\r\n        locatie_magazin: \"\",\r\n        result: \"\",\r\n        validateCount: 2,\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\"\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n\r\n    }\r\n\r\n\r\n    formValidator = () => {\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            //validatefieldmsg1\r\n            if ($(\".validatefield\" + i).val() === \"\") {\r\n                let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                msg += \"<p> \" + text + \" </p>\";\r\n                allOK = false;\r\n            }\r\n        }\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let allOK = this.formValidator();\r\n        if (allOK) {\r\n            const newObj = Object.assign({}, { payload: this.state }, { type: \"NEW_STORE\" });\r\n            var self = this;\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Updates', newObj)\r\n                .then((res) => {\r\n                    try {\r\n                        const { response } = JSON.parse(res.data);\r\n                        //console.log(response);\r\n                        if (response === \"\") {\r\n                            //console.log(\"inserted exists\");\r\n                            let result = \"Record Already Exists\";\r\n                            self.setState({\r\n                                ...this.state,\r\n                                result\r\n                            })\r\n                            //console.log(self.state);\r\n                        }\r\n                        if (response === '1') {\r\n                            //console.log(\"inserted record\");\r\n                            let result = \"Record Updated\";\r\n                            self.setState({\r\n                                ...this.state,\r\n                                result\r\n                            })\r\n                            //console.log(self.state);\r\n                        }\r\n                    } catch (e) {\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBackButton = (e) => {\r\n        let newObj = Object.assign({}, {\r\n            nume_magazin: \"\",\r\n            locatie_magazin: \"\",\r\n            result: \"\"\r\n        });\r\n        this.setState(newObj);\r\n        //console.log(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n    loginComponent = () => {\r\n        if (this.state.result === \"\") {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg1\" className=\"text-info text-medium\" htmlFor=\"nume_magazin\">*Nume Magazin</label>\r\n                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield1 form-control\" id=\"nume_magazin\" placeholder=\"Nume Magazin\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg2\" className=\"text-info text-medium\" htmlFor=\"locatie_magazin\">*Locatie Magazin</label>\r\n                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield2 form-control\" id=\"locatie_magazin\" placeholder=\"Nume Magazin\" />\r\n                    </div>\r\n                    <button onSubmit={this.handleSubmit} id=\"submitBtnRecord\" className=\"btn btn-primary\">+ Salveaza Magazin</button>\r\n                </form>\r\n            )\r\n        } else if (this.state.result === \"Record Updated\") {\r\n            return (\r\n                <div className=\"alert alert-success\">\r\n                    <strong >Magazin Introdus cu Succes</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-ok\"></span> Inapoi</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-danger\">\r\n                    Magazinul deja exista<strong > Poate Doriti sa il updatati!!! Atunci sunteti in meniul gresit</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-arrow-left\"></span> Margeti Inapoi</button>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>Introducere Magazin Nou</h1><br /><br />\r\n                                <div className=\"form-width-medium\">\r\n                                    <this.loginComponent />\r\n                                </div>\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IntroducereMagazinNou\r\n","import React from 'react'\r\n\r\nconst RenderComponent = (props) => {\r\n\r\n    return (\r\n        <tr id={\"tdParent\" + props.index}>\r\n            {props.sqlTableFildsList.map((indexitem, index) => {\r\n                return <td id={props.index} className={props.sqlTableFildsList[index] + props.index + \" cursor\"} key={index}>{props.item[indexitem]}</td>\r\n            })}\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default RenderComponent\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport RenderComponent from './RenderComponent'\r\nimport $ from 'jquery'\r\nimport \"./renderTable.css\"\r\n\r\nclass RenderTableViewDelete extends Component {\r\n\r\n    state = {\r\n        type: \"\",\r\n        viewTableFildsList: [],\r\n        sqlTableFildsList: [],\r\n        sqlcommand: \"\",\r\n        storelist: [],\r\n        toDeleteList: [],\r\n        table_name: \"\",\r\n        deleteListIndexBy: \"\",\r\n        response: \"\"\r\n    }\r\n\r\n    getTableRequestedData = () => {\r\n        const newObj = Object.assign({}, { ...this.props.state });\r\n        //console.log(newObj);\r\n        this.setState(newObj);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    // console.log(res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"NoItemsInTheList\") {\r\n                        $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                    }\r\n\r\n                    if (response === \"ok\") {\r\n                        $(\"#EmptySpan\").addClass(\"hidden\");\r\n                        let { storelist } = JSON.parse(res.data);\r\n                        //console.log(\"rerequest\");\r\n                        const newObjj = Object.assign({}, { ...this.state }, { storelist: [...storelist] });\r\n                        this.setState(newObjj);\r\n                        //console.log(\"json\", newObjj);\r\n                    }\r\n                } catch (e) {\r\n                    $(\"#EmptySpan\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#EmptySpan\").addClass(\"bg-red\");\r\n                    $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                }\r\n            });\r\n    }\r\n\r\n    postTableRequestedData = (newDelete) => {\r\n        //const newObj = Object.assign({}, { ...this.props.state });\r\n        //this.setState(newObj);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Delete', newDelete)\r\n            .then((res) => {\r\n                //console.log(res);\r\n                let { response } = JSON.parse(res.data);\r\n                if (response === \"ok\") {\r\n                    const newObjj = Object.assign({}, { ...this.state }, { response });\r\n                    this.setState(newObjj);\r\n                    this.getTableRequestedData();\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getTableRequestedData();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    returnTableHeader = this.props.state.viewTableFildsList.map((item, index) => {\r\n        return <th id={this.props.state.sqlTableFildsList[index]} key={index}>{item}</th>;\r\n    })\r\n\r\n\r\n    handleClickChange = (e) => {\r\n        //alert($(\"#tdParent\" + e.target.id).hasClass(\"itemToDelete\"));\r\n        let parrentId = \"#tdParent\" + e.target.id;\r\n        let deleteListIndexBy = $(\".\" + this.state.deleteListIndexBy + e.target.id).text();\r\n        if ($(parrentId).hasClass(\"itemToDelete\")) {\r\n            this.setState({\r\n                ...this.state,\r\n                toDeleteList: this.state.toDeleteList.filter(item => item !== deleteListIndexBy)\r\n            });\r\n            $(parrentId).removeClass(\"itemToDelete\");\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                toDeleteList: [...this.state.toDeleteList, deleteListIndexBy]\r\n            });\r\n            $(parrentId).addClass(\"itemToDelete\");\r\n        }\r\n        //console.log(this.state);\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.toDeleteList.length > 0) {\r\n            const newDelete = Object.assign({}, { ...this.state }, { type: \"Delete_General\" });\r\n            this.postTableRequestedData(newDelete);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-sm12\">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>{this.props.state.componentTitle}</h1>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <table onClick={this.handleClickChange} className=\"table-responsive table table-bordered table-striped table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                {this.state.viewTableFildsList.length !== 0 && this.returnTableHeader}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.storelist.length !== 0 && this.state.storelist.map((item, index) => {\r\n                                                    return <RenderComponent key={index} sqlTableFildsList={this.state.sqlTableFildsList} index={index} item={item} />\r\n                                                })\r\n                                            }\r\n                                            <tr><td id=\"EmptySpan\" className=\"info\" colSpan={this.state.viewTableFildsList.length}>Empty</td></tr>\r\n                                        </tbody>\r\n                                    </table><br />\r\n                                    <button onSubmit={this.handleSubmit} className=\"btn\">Sterge Intrari</button>\r\n                                    <br /><br /></form>\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RenderTableViewDelete\r\n","import React, { Component } from 'react'\r\n// import RenderTableView from '../componentaVizualizareGenerala/RenderTableView'\r\nimport RenderTableViewDelete from '../../componenteTemplate/VizualizareGeneralaStergere/RenderTableViewDelete'\r\n\r\n\r\n\r\nclass VizualizareListareMagazine extends Component {\r\n    state = {\r\n        type: \"General_Listing\",\r\n        viewTableFildsList: [\"Name Magazin\", \"Locatie Magazin\"],\r\n        sqlTableFildsList: [\"store_name\", \"store_location\"],\r\n        sqlcommand: \"select store_name, store_location from store_info ORDER BY store_name ASC\",\r\n        storelist: [],\r\n        componentTitle: \"Listare/Stergere Magazine\",\r\n        table_name: \"store_info\",\r\n        deleteListIndexBy: \"store_name\",\r\n        response: \"\"\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RenderTableViewDelete state={this.state} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VizualizareListareMagazine\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport $ from 'jquery'\r\nimport ModalWindow from '../../ModalComponent/ModalWindow'\r\n\r\nclass IntroducereImprimantaNoua extends Component {\r\n    state = {\r\n        storelist: [\r\n\r\n        ],\r\n        locatie_magazin: \"\",\r\n        result: \"\",\r\n        date: \"\",\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\",\r\n        validateCount: 5\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n\r\n    }\r\n\r\n    ListaOptiuniStatusImprimante = [];\r\n\r\n    getOptionsList = () => {\r\n        const newObj = Object.assign({}, { type: \"Listare_Optiuni_Imprimanta\" });\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    //console.log(res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"ListaOptiuniImprimanta\") {\r\n                        let { optiuniImprimanta } = JSON.parse(res.data);\r\n                        this.ListaOptiuniStatusImprimante = [...optiuniImprimanta];\r\n                        //console.log(this.ListaOptiuniStatusImprimante);\r\n                        this.resetState();\r\n                    }\r\n\r\n                } catch (e) {\r\n                    //console.error(e);\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n            });\r\n    }\r\n\r\n    formValidator = () => {\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            //validatefieldmsg1\r\n            //alert($('.validatefield' + i).is(\"select\"))\r\n            if ($('.validatefield' + i).is(\"select\")) {\r\n                let disabledText = $('.validatefield' + i + ' option[disabled]:selected').val();\r\n                let selectedVal = $('.validatefield' + i).find(\":selected\").val();\r\n                if (selectedVal === disabledText) {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            } else {\r\n                if ($(\".validatefield\" + i).val() === \"\") {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        let allOK = this.formValidator();\r\n        if (allOK) {\r\n            let printer_brand = $('#printer_brand').val();\r\n            let printer_model = $('#printer_model').val();\r\n            let printer_sn = $('#printer_sn').val();\r\n            let store_id_name = $('#store_id_name').val();\r\n            let printer_status = $('#printer_status').val();\r\n            let printer_list_price = $('#printer_list_price').val();\r\n            let printer_installed_date = $('#printer_installed_date').val();\r\n            let user_name = sessionStorage.getItem(\"user_name\");\r\n            let payload = {\r\n                printer_brand: printer_brand,\r\n                printer_model: printer_model,\r\n                printer_sn: printer_sn,\r\n                store_id_name: store_id_name,\r\n                printer_status: printer_status,\r\n                printer_list_price: printer_list_price,\r\n                printer_installed_date: printer_installed_date,\r\n                changed_by: user_name\r\n            }\r\n\r\n            const newObj = Object.assign({}, { payload }, { type: \"NEW_PRINTER\" });\r\n            var self = this;\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Updates', newObj)\r\n                .then((res) => {\r\n                    //console.log(res);\r\n                    try {\r\n                        const { response } = JSON.parse(res.data);\r\n                        //console.log(response);\r\n                        if (response === \"\") {\r\n                            //console.log(\"inserted exists\");\r\n                            let result = \"Record Already Exists\";\r\n                            self.setState({\r\n                                ...this.state,\r\n                                result\r\n                            })\r\n                            //console.log(self.state);\r\n                        }\r\n                        if (response === '1') {\r\n                            //console.log(\"inserted record\");\r\n                            let result = \"Record Updated\";\r\n                            self.setState({\r\n                                ...this.state,\r\n                                result\r\n                            })\r\n                            //console.log(self.state);\r\n                        }\r\n                    } catch (e) {\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBackButton = (e) => {\r\n        let newObj = Object.assign({}, {\r\n            nume_magazin: \"\",\r\n            locatie_magazin: \"\",\r\n            result: \"\"\r\n        });\r\n        this.setState(newObj);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getOptionsList();\r\n    }\r\n\r\n    datepicker = () => {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <input className=\"form-control\" id=\"printer_installed_date\" placeholder=\"YYYY/MM/DD\" type=\"date\" />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n\r\n        const newObj = Object.assign({}, { payload: \"NONE\" }, { type: \"Listare_Magazine\" });\r\n\r\n        if (this.state.storelist.length === 0) {\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Listare', newObj)\r\n                .then((res) => {\r\n                    //console.log(res)\r\n                    try {\r\n                        const { response, store_location } = JSON.parse(res.data);\r\n                        //console.log(store_location);\r\n                        if (response === \"StoreLocationSugestion\") {\r\n                            this.setState({ ...this.state, storelist: [...store_location] });\r\n                        }\r\n\r\n                        // console.log(\"axios\", self.state);\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n            var today = new Date();\r\n            this.setState({\r\n                ...this.state,\r\n                date: today\r\n            });\r\n        }\r\n    }\r\n\r\n    storeModal = () => {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"input-field col s12 m6\">\r\n                    <select id=\"store_id_name\" defaultValue=\"Magazine\" className=\"validatefield4 browser-default\">\r\n                        <option disabled >Magazine</option>\r\n                        {this.state.storelist.map((item, i) => {\r\n                            return <option key={i}>{item['store_name']}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    stareImprimanta = () => {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"input-field col s12 m6\">\r\n                    <select id=\"printer_status\" defaultValue=\"Selecteaza o optiune\" className=\"validatefield5 browser-default\">\r\n                        <option disabled >Selecteaza o optiune</option>\r\n                        {this.ListaOptiuniStatusImprimante.map((item, index) => <option key={index}>{item.option_name}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n    loginComponent = () => {\r\n        if (this.state.result === \"\") {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg1\" className=\"text-medium text-danger\" htmlFor=\"printer_brand\">*Brand Imprimanta</label>\r\n                        <input type=\"text\" className=\"validatefield1 form-control\" id=\"printer_brand\" placeholder=\"Brand Imprimanta\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg2\" className=\"text-medium text-danger\" htmlFor=\"printer_model\">*Model Imprimanta</label>\r\n                        <input type=\"text\" className=\"validatefield2 form-control\" id=\"printer_model\" placeholder=\"Model Imprimanta\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg3\" className=\"text-medium text-danger\" htmlFor=\"printer_sn\">*Serie Imprimanta</label>\r\n                        <input type=\"text\" className=\"validatefield3 form-control\" id=\"printer_sn\" placeholder=\"Serie Imprimanta\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg4\" className=\"text-medium text-danger\" >*De ce magazin apartine?</label><br />\r\n                        <this.storeModal />\r\n                        {/* <input onChange={this.handleChange} data-toggle=\"modal\" data-target=\"#myModal\" type=\"text\" className=\"form-control\" id=\"store_id\" placeholder=\"De ce magazin apartine?\" /> */}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg5\" className=\"text-medium text-danger\" >*Status Imprimanta (eg: \"Noua In Depozit\" pt prima data)</label>\r\n                        <this.stareImprimanta />\r\n                        {/* <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id=\"printer_status\" placeholder=\"Status Imprimanta\" /> */}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-medium text-info\" htmlFor=\"printer_list_price\">Pret de Magazin</label>\r\n                        <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id=\"printer_list_price\" placeholder=\"Pret de Magazin\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-medium text-info\" htmlFor=\"printer_installed_date\">Data Instalarii</label>\r\n\r\n                        <this.datepicker />\r\n                        {/* <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id=\"printer_installed_date\" placeholder=\"Data Instalarii\" /> */}\r\n                    </div>\r\n                    <button onSubmit={this.handleSubmit} id=\"submitBtnRecord\" className=\"btn btn-primary\">+ Salveaza Imprimanta</button>\r\n\r\n                </form>\r\n            )\r\n        } else if (this.state.result === \"Record Updated\") {\r\n            return (\r\n                <div className=\"alert alert-success\">\r\n                    <strong >Magazin Introdus cu Succes</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-ok\"></span> Inapoi</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-danger\">\r\n                    Imprimanta deja existenta in sistem, sau conexiune cu baza de date indexistenta!!<strong> Contactati IT</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-arrow-left\"></span> Margeti Inapoi</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            < div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>Introducere Imprimanta Noua</h1>\r\n                                <div className=\"form-width-large\">\r\n                                    <this.loginComponent />\r\n                                </div>\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default IntroducereImprimantaNoua\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport $ from 'jquery'\r\nimport ModalWindow from '../../ModalComponent/ModalWindow'\r\n// import updatesAction from '../../../../actions/updatesAction'\r\n// import {connect} from \r\n\r\nclass IntroducereUserNou extends Component {\r\n    state = {\r\n        user_name: \"\",\r\n        user_password: \"\",\r\n        user_role: \"\",\r\n        result: \"\",\r\n        validateCount: 3,\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\"\r\n    }\r\n\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n\r\n    }\r\n    formValidator = () => {\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            //validatefieldmsg1\r\n            //alert($('.validatefield' + i).is(\"select\"))\r\n            if ($('.validatefield' + i).is(\"select\")) {\r\n                let disabledText = $('.validatefield' + i + ' option[disabled]:selected').val();\r\n                let selectedVal = $('.validatefield' + i).find(\":selected\").val();\r\n                if (selectedVal === disabledText) {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            } else {\r\n                if ($(\".validatefield\" + i).val() === \"\") {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let allOK = this.formValidator();\r\n        if (allOK) {\r\n            document.getElementById(\"user_name\").value = \"\";\r\n            document.getElementById(\"user_password\").value = \"\";\r\n            document.getElementById(\"user_role\").value = \"\";\r\n            const newObj = Object.assign({}, { payload: this.state }, { type: \"NEW_USER\" });\r\n            var self = this;\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Updates', newObj)\r\n                .then((res) => {\r\n                    try {\r\n                        const { response } = JSON.parse(res.data);\r\n                        //console.log(response);\r\n                        if (response === \"\") {\r\n                            //console.log(\"inserted exists\");\r\n                            let result = \"Record Already Exists\";\r\n                            self.setState({\r\n                                ...this.state,\r\n                                result\r\n                            })\r\n                            //console.log(self.state);\r\n                        }\r\n                        if (response === '1') {\r\n                            //console.log(\"inserted record\");\r\n                            let result = \"Record Updated\";\r\n                            self.setState({\r\n                                ...this.state,\r\n                                result\r\n                            })\r\n                            //console.log(self.state);\r\n                        }\r\n                    } catch (e) {\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBackButton = (e) => {\r\n        let newObj = Object.assign({}, {\r\n            user_name: \"\",\r\n            user_password: \"\",\r\n            user_role: \"\",\r\n            result: \"\"\r\n        });\r\n        this.setState(newObj);\r\n        //console.log(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n    userRole = () => {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"row input-field\">\r\n                    <select onChange={this.handleChange} id=\"user_role\" defaultValue=\"Selecteaza o optiune\" className=\"validatefield3 browser-default\">\r\n                        <option disabled >Selecteaza o optiune</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                        <option value=\"raport\">Vizualizare Rapoarte</option>\r\n                        <option value=\"store\">Sesizare Problema Imprimanta(Pentru Magazine)</option>\r\n                        <option value=\"storeraport\">Rapoarte + Sesizare Probleme</option>\r\n                    </select>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    userComponent = () => {\r\n        if (this.state.result === \"\") {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg1\" className=\"text-info text-medium\" htmlFor=\"user_name\">*Nume User</label>\r\n                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield1 form-control\" id=\"user_name\" placeholder=\"Nume Magazin\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg2\" className=\"text-info text-medium\" htmlFor=\"user_password\">*Parola User</label>\r\n                        <input onChange={this.handleChange} type=\"password\" className=\"validatefield2 form-control\" id=\"user_password\" placeholder=\"Nume Magazin\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"validatefieldmsg3\" className=\"text-info text-medium\" htmlFor=\"user_role\">*Role User</label>\r\n                        <this.userRole />\r\n                    </div>\r\n                    <button onSubmit={this.handleSubmit} id=\"submitBtnRecord\" className=\"btn btn-primary\">+ Salveaza Magazin</button>\r\n                </form>\r\n            )\r\n        } else if (this.state.result === \"Record Updated\") {\r\n\r\n            return (\r\n                <div className=\"alert alert-success\">\r\n                    <strong >User Introdus cu Succes</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-ok\"></span> Inapoi</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-danger\">\r\n                    Userul deja exista<strong > Poate Doriti sa il updatati!!! Atunci sunteti in meniul gresit</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-arrow-left\"></span> Margeti Inapoi</button>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>Introducere User Nou</h1>\r\n                                <div className=\"form-width-medium\">\r\n                                    <this.userComponent />\r\n                                </div>\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IntroducereUserNou\r\n","import React, { Component } from 'react'\r\n// import RenderTableView from '../componentaVizualizareGenerala/RenderTableView'\r\nimport RenderTableViewDelete from '../../componenteTemplate/VizualizareGeneralaStergere/RenderTableViewDelete'\r\n\r\n\r\nclass VizualizareListareImprimante extends Component {\r\n    state = {\r\n        type: \"General_Listing\",\r\n        viewTableFildsList: [\"Brand\", \"Model\", \"Serie\", \"Locatie\", \"Status\", \"Pret Lista\", \"Data Instalarii\"],\r\n        sqlTableFildsList: [\"printer_brand\", \"printer_model\", \"printer_sn\", \"store_name\", \"printer_status\", \"printer_list_price\", \"printer_installed_date\"],\r\n        sqlcommand: \"select p.printer_brand printer_brand,p.printer_model printer_model,p.printer_sn printer_sn,s.store_name store_name,p.printer_status printer_status,p.printer_list_price printer_list_price,p.printer_installed_date printer_installed_date from printers p, store_info s where p.store_id = s.store_id\",\r\n        storelist: [],\r\n        componentTitle: \"Listare/Stergere Imprimante\",\r\n        table_name: \"printers\",\r\n        deleteListIndexBy: \"printer_sn\",\r\n        response: \"\"\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <RenderTableView state={this.state} /> */}\r\n                <RenderTableViewDelete state={this.state} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VizualizareListareImprimante\r\n","import React, { Component } from 'react'\r\n// import RenderTableView from '../componentaVizualizareGenerala/RenderTableView'\r\nimport RenderTableViewDelete from '../../componenteTemplate/VizualizareGeneralaStergere/RenderTableViewDelete'\r\n\r\n\r\nclass VizualizareListareUseri extends Component {\r\n    state = {\r\n        type: \"General_Listing\",\r\n        viewTableFildsList: [\"Nume Utilizator\", \"Role Utilizator\", \"Data Ultima Logare\"],\r\n        sqlTableFildsList: [\"user_name\", \"user_role\", \"user_last_login\"],\r\n        sqlcommand: \"select user_name, user_role,user_last_login from printer_users ORDER BY user_name ASC\",\r\n        storelist: [],\r\n        componentTitle: \"Listare/Stergere Useri\",\r\n        table_name: \"printer_users\",\r\n        deleteListIndexBy: \"user_name\",\r\n        response: \"\"\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <RenderTableView state={this.state} /> */}\r\n                <RenderTableViewDelete state={this.state} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VizualizareListareUseri \r\n","import React from 'react'\r\n\r\nconst RenderComponent = (props) => {\r\n\r\n    return (\r\n\r\n        <tr id={\"tdParent\" + props.index} className=\"SuggestionBoxParent\">\r\n            {props.sqlTableFildsList.map((indexitem, index) => {\r\n                if (props.editableFields.find(item => item === props.sqlTableFildsList[index])) {\r\n                    if (props.sqlTableFildsList[index] === \"user_password\") {\r\n                        return <td key={index}><input onBlur={props.handleBlur} onFocus={props.handleFocus} onChange={props.handleTypeChange} type=\"password\" className={\"form-control smallText cursor\"} id={props.sqlTableFildsList[index] + props.index} placeholder=\"Apasa pentru a schimba parola\" />\r\n                        </td>\r\n                    } else\r\n                        return <td key={index}>\r\n                            <input onBlur={props.handleBlur} onFocus={props.handleFocus} onChange={props.handleTypeChange} type=\"text\" className={\"form-control smallText\"} id={props.sqlTableFildsList[index] + props.index} placeholder={props.item[indexitem]} />\r\n                            <div id={\"SuggestionBox\" + props.index} className=\"SuggestionBox hidden cursor\"></div>\r\n                        </td>\r\n\r\n                }\r\n                return <td id={props.index} className={props.sqlTableFildsList[index] + props.index + \" cursor\"} key={index}>{props.item[indexitem]}</td>\r\n            })}\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default RenderComponent\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport RenderComponent from './RenderComponent'\r\nimport \"./renderTable.css\"\r\nimport $ from 'jquery'\r\n\r\nclass ComponentaUpdateGeneral extends Component {\r\n\r\n    state = {\r\n        type: \"\",\r\n        viewTableFildsList: [],\r\n        sqlTableFildsList: [],\r\n        editableFields: [],\r\n        sqlcommand: \"\",\r\n        storelist: [],\r\n        storelistMap: [],\r\n        toDeleteList: [],\r\n        table_name: \"\",\r\n        deleteListIndexBy: \"\",\r\n        response: \"\",\r\n        changedInfo: []\r\n    }\r\n\r\n\r\n    jsonTable = [];\r\n    suggestionInfoToGetFromTable = [];\r\n    suggestionInfoUserUpdate = [\"admin\", \"raport\", \"store\", \"storeraport\"];\r\n    suggestionInfoUpdateImprimante = {\r\n        store_location: [],\r\n        printer_status: []\r\n    };\r\n    sqlCommandToUpdateRecords = [];\r\n    sqlCommandToUpdateHistory = [];\r\n\r\n    getOptionsList = () => {\r\n        const newObj = Object.assign({}, { type: \"Listare_Optiuni_Imprimanta\" });\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    //console.log(res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"ListaOptiuniImprimanta\") {\r\n                        $(\"#submitBtnRecord\").text(\"Inregistraza Modificari\");\r\n                        $(\"#submitBtnRecord\").removeClass(\"disabled\");\r\n                        $(\"#submitBtnRecord\").removeClass(\"bg-red\");\r\n                        let { optiuniImprimanta } = JSON.parse(res.data);\r\n                        this.suggestionInfoUpdateImprimante = Object.assign({}, { ...this.suggestionInfoUpdateImprimante }, { printer_status: optiuniImprimanta.map(item => item.option_name) });\r\n                        this.setState({ ...this.state });\r\n                    }\r\n\r\n                } catch (e) {\r\n                    //console.error(e);\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n            });\r\n    }\r\n\r\n    UpdateSqlRecords = () => {\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Updates', this.sqlCommandToUpdateRecords[0])\r\n            .then((res) => {\r\n                //console.log(res);\r\n\r\n                try {\r\n                    const { response } = JSON.parse(res.data);\r\n                    //console.log(JSON.stringify(request[0]));\r\n                    if (response === \"\") {\r\n                        $(\"#tdParent\" + this.sqlCommandToUpdateRecords[0].rowAffected).after(\"<span class='infoFail'>Inregistrare Nereusita</span>\");\r\n                        //console.log(self.state);\r\n                    }\r\n                    if (response === '1') {\r\n                        //console.log(self.state);\r\n                        $(\"#tdParent\" + this.sqlCommandToUpdateRecords[0].rowAffected).after(\"<span class='infoSuccess'>Inregistrare Reusita</span>\");\r\n                        //trimite email la magazin\r\n                    }\r\n                    this.sqlCommandToUpdateRecords = this.sqlCommandToUpdateRecords.filter(item => item !== this.sqlCommandToUpdateRecords[0]);\r\n\r\n                    if (typeof this.sqlCommandToUpdateRecords[0] !== \"undefined\") {\r\n                        //console.log(\"tdParent\" + request[0].rowAffected + \" SuggestionBoxParent::after\");\r\n                        this.UpdateSqlRecords(this.sqlCommandToUpdateRecords[0]);\r\n                    } else {\r\n                        if (typeof this.sqlCommandToUpdateHistory.storeChanges[0] !== \"undefined\") {\r\n                            setTimeout(() => {\r\n                                this.updateHistory();\r\n                            }, 800);\r\n                        } else {\r\n                            $(\"#submitBtnRecord\").text(\"Inregistraza Modificari\");\r\n                            $(\"#submitBtnRecord\").removeClass(\"disabled\");\r\n                            $(\"#submitBtnRecord\").removeClass(\"bg-red\");\r\n                            setTimeout(() => {\r\n                                this.getTableRequestedData(this.state);\r\n                                this.resetFieldsInfo();\r\n                            }, 8000);\r\n                        }\r\n                    }\r\n\r\n                } catch (e) {\r\n                    //$(\"#tdParent\" + this.sqlCommandToUpdateRecords[0].rowAffected).after(\"<span class='infoFail'>Inregistrare Nereusita</span>\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    setTimeout(() => {\r\n                        this.getTableRequestedData(this.state);\r\n                        this.resetFieldsInfo();\r\n                    }, 8000);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    updateHistory = () => {\r\n        if (typeof this.sqlCommandToUpdateHistory.storeChanges[0] !== \"undefined\") {\r\n            //console.log(\"to update histody:\", this.sqlCommandToUpdateHistory.storeChanges[0]);\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Updates', Object.assign({}, { storeChanges: [this.sqlCommandToUpdateHistory.storeChanges[0]] }, { type: \"STORE_USER_STATUS_CHANGE\" }))\r\n                .then((res) => {\r\n                    //console.log(res);\r\n                    try {\r\n                        const { response } = JSON.parse(res.data);\r\n                        if (response === \"\") {\r\n                            //$(\"#tdParent\" + this.sqlCommandToUpdateRecords[0].rowAffected).after(\"<span class='infoFail'>Inregistrare Nereusita</span>\");\r\n                        }\r\n                        if (response === '1') {\r\n                            //console.log(\"updated : \", this.sqlCommandToUpdateHistory.storeChanges[0]);\r\n                            //$(\"#tdParent\" + this.sqlCommandToUpdateRecords[0].rowAffected).after(\"<span class='infoSuccess'>Inregistrare Reusita</span>\");\r\n                        }\r\n                        //console.log(\"before\", this.sqlCommandToUpdateHistory);\r\n                        this.sqlCommandToUpdateHistory = Object.assign({}, {\r\n                            storeChanges: this.sqlCommandToUpdateHistory.storeChanges.filter(item => {\r\n                                return item !== this.sqlCommandToUpdateHistory.storeChanges[0];\r\n                            })\r\n                        });\r\n\r\n\r\n                        //console.log(\"left=\", this.sqlCommandToUpdateHistory);\r\n                        if (typeof this.sqlCommandToUpdateHistory.storeChanges[0] !== \"undefined\") {\r\n                            this.updateHistory();\r\n                        } else {\r\n                            $(\"#submitBtnRecord\").text(\"Inregistraza Modificari\");\r\n                            $(\"#submitBtnRecord\").removeClass(\"disabled\");\r\n                            $(\"#submitBtnRecord\").removeClass(\"bg-red\");\r\n                            setTimeout(() => {\r\n                                this.getTableRequestedData(this.state);\r\n                                this.resetFieldsInfo();\r\n                            }, 8000);\r\n                            //console.log(\"history updatea finished\");\r\n                        }\r\n                    } catch (e) {\r\n                        //console.error(e);\r\n                    }\r\n                }).catch(err => {\r\n                    // console.error(err);\r\n                });\r\n\r\n        } else {\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    getSuggestionInfo = (request) => {\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', request)\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                try {\r\n\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(\"printers\", \"json\", res.data);\r\n                    if (response === \"StoreLocationSugestion\") {\r\n                        let { store_location } = JSON.parse(res.data);\r\n                        let parsedStore_location = store_location.map(item => {\r\n                            return item.store_name\r\n                        })\r\n                        //console.log(\"am intrat si aici\");\r\n                        //const newObjj = Object.assign({}, { ...this.state }, { storelist: [...storelist] });\r\n                        //this.setState(newObjj);\r\n                        this.suggestionInfoUpdateImprimante = Object.assign({}, { ...this.suggestionInfoUpdateImprimante }, { store_location: [...parsedStore_location] }, { storelistMap: [...store_location] });\r\n                        this.suggestionInfoToGetFromTable = Object.assign({}, { store_location: [...parsedStore_location] });\r\n                        //this.suggestionInfoUpdateImprimante = Object.assign({}, { store_location: [...parsedStore_location] });\r\n                        //console.log(this.suggestionInfoUpdateImprimante);\r\n                        //console.log(this.suggestionInfoToGetFromTable);\r\n                    }\r\n                } catch (e) {\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    // $(\"#submitBtnRecord\").addClass(\"disabled\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    getTableRequestedData = (nextProps) => {\r\n        //console.log(\"before\", nextProps);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', nextProps)\r\n            .then((res) => {\r\n                // console.log(\"rerequest\");\r\n                //console.log(\"after\", res.data);\r\n                try {\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"NoItemsInTheList\") {\r\n                        $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                    }\r\n                    //console.log(\"props\", nextProps);\r\n                    if (response === \"ok\") {\r\n                        $(\"#EmptySpan\").addClass(\"hidden\");\r\n                        let { storelist } = JSON.parse(res.data);\r\n                        const newObjj = Object.assign({}, { ...nextProps }, { storelist: [...storelist] });\r\n\r\n                        if (nextProps.table_name === \"store_info\") {\r\n                            //console.log(\"store_info\", this.newObjj);\r\n                            //console.log(\"store_info t\", this.suggestionInfoUpdateImprimante.store_location);\r\n                            this.suggestionInfoToGetFromTable = Object.assign({}, { store_location: newObjj.storelist.map(item => { return item.store_location }) });\r\n                            this.suggestionInfoUpdateImprimante = Object.assign({}, { ...this.suggestionInfoUpdateImprimante }, { store_location: newObjj.storelist.map(item => { return item.store_location }) });\r\n                            //this.suggestionInfoUpdateImprimante = Object.assign({}, { ...this.suggestionInfoUpdateImprimante }, { store_location: [...parsedStore_location] }, { storelistMap: [...store_location] });\r\n                            //this.suggestionInfoToGetFromTable = newObjj.storelist.map(item => { return item.store_location });\r\n                            //console.log(this.suggestionInfoUpdateImprimante.store_location);\r\n                            //this.getSuggestionInfo(Object.assign({}, { type: \"Listare_Magazine\" }));\r\n                            //this.suggestionInfoUpdateImprimante = Object.assign({}, { ...this.suggestionInfoUpdateImprimante }, { store_list: this.suggestionInfoToGetFromTable });\r\n\r\n                        }\r\n\r\n                        if (nextProps.table_name === \"printers\") {\r\n\r\n                            this.getSuggestionInfo(Object.assign({}, { type: \"Listare_Magazine\" }));\r\n                        }\r\n\r\n                        this.getOptionsList();\r\n                        this.setState(newObjj);\r\n\r\n                    }\r\n\r\n                } catch (e) {\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    //  $(\"#submitBtnRecord\").addClass(\"disabled\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n            });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //this.getOptionsList();\r\n        this.setState(Object.assign({}, { ...this.state, ...nextProps.state }));\r\n        this.getTableRequestedData(Object.assign({}, { ...this.state, ...nextProps.state }));\r\n\r\n    }\r\n\r\n    postTableRequestedData = (newDelete) => {\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Delete', newDelete)\r\n            .then((res) => {\r\n                let { response } = JSON.parse(res.data);\r\n                if (response === \"ok\") {\r\n                    const newObjj = Object.assign({}, { ...this.state }, { response });\r\n                    this.setState(newObjj);\r\n                    this.getTableRequestedData();\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getTableRequestedData(this.props.state);\r\n        //this.getSuggestionInfo(Object.assign({}, { type: \"Listare_Magazine\" }));\r\n        // var test = \"UPDATE printers SET store_id='1',printer_status='Trimisa la Magazin' where printer_sn='test2'\";\r\n        // var regex = /.*store_id='{1}'.*printer_status='Trimisa la Magazin'/g;\r\n        // var found = test.match(regex);\r\n        // //console.log(found);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        $(\"span\").remove(\".infoSuccess\");\r\n        $(\"span\").remove(\".infoFail\");\r\n        // this.getTableRequestedData();\r\n    }\r\n    /*\r\n    changedInfo:[\r\n        {\r\n            store_name:\"\",\r\n            store_location:\"\"\r\n        },\r\n        {\r\n            store_name:\"\",\r\n            store_location:\"\"\r\n        }\r\n     \r\n    ]\r\n    */\r\n    resetFieldsInfoBtn = (e) => {\r\n        this.resetFieldsInfo();\r\n    }\r\n    resetFieldsInfo() {\r\n        for (let i = 0; i < this.state.editableFields.length; i++) {\r\n            for (let j = 0; j < this.state.storelist.length; j++) {\r\n                let fields = this.state.editableFields[i] + \"\" + j;\r\n                $(\"#\" + fields).val(\"\");\r\n            }\r\n        }\r\n        $(\".SuggestionBox\").html(\"\");\r\n    }\r\n\r\n    //.borderIncorectInfo\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        let testOK = true;\r\n\r\n        //console.log(this.suggestionInfoUpdateImprimante);\r\n\r\n        for (let i = 0; i < this.state.editableFields.length; i++) {\r\n            for (let j = 0; j < this.state.storelist.length; j++) {\r\n                let fields = this.state.editableFields[i] + \"\" + j;\r\n                let value = $(\"#\" + fields).val();\r\n                if ((typeof value !== \"undefined\") && value !== \"\") {\r\n\r\n                    let currentValue = $(\"#\" + fields).attr('placeholder');\r\n\r\n                    if (fields.includes(\"store_name\") || fields.includes(\"store_location\")) {\r\n                        let testresult = this.suggestionInfoUpdateImprimante.store_location.find(item => item === value);\r\n                        //console.log(\"res\", this.suggestionInfoUpdateImprimante.store_location);\r\n                        if (typeof testresult === \"undefined\") {\r\n                            //$(\"#\" + fields).val(\"\");\r\n                            $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                            let sBox = \"#SuggestionBox\" + j;\r\n                            $(sBox).removeClass(\"hidden\");\r\n                            $(sBox).html(\"<span class='errorMsgSuggestionBox'>Erroare!! Locatie Inexistenta!!! Introduceti locatie noua sau introduceti una corecta</div>\");\r\n                            testOK = false;\r\n                        } else\r\n                            if (currentValue.trim().toUpperCase() === testresult.toUpperCase()) {\r\n                                $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                let sBox = \"#SuggestionBox\" + j;\r\n                                $(sBox).removeClass(\"hidden\");\r\n                                $(sBox).html(\"<span class='errorMsgSuggestionBox'>Erroare!! Ati introdus Acceasi Locatie deja existenta!!!</div>\");\r\n                                testOK = false;\r\n                            }\r\n\r\n                    } else\r\n                        if (fields.includes(\"printer_status\")) {\r\n                            let testresult = this.suggestionInfoUpdateImprimante.printer_status.find(item => item === value);\r\n                            if (typeof testresult === \"undefined\") {\r\n                                // $(\"#\" + fields).val(\"\");\r\n                                $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                let sBox = \"#SuggestionBox\" + j;\r\n                                //console.log(sBox);\r\n                                $(sBox).removeClass(\"hidden\");\r\n                                $(sBox).html(\"<div class='errorMsgSuggestionBox'>Erroare!! Status inexistent doar statusurile de mai jos sunt admise: \" + this.suggestionInfoUpdateImprimante.printer_status + \"</div>\");\r\n                                testOK = false;\r\n                            } else\r\n                                if (currentValue.trim().toUpperCase() === testresult.toUpperCase()) {\r\n                                    $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                    let sBox = \"#SuggestionBox\" + j;\r\n                                    $(sBox).removeClass(\"hidden\");\r\n                                    $(sBox).html(\"<span class='errorMsgSuggestionBox'>Erroare!! Ati introdus acelasi status deja existent!!!</div>\");\r\n                                    testOK = false;\r\n                                }\r\n                        } else\r\n                            if (fields.includes(\"printer_list_price\")) {\r\n                                if (!parseInt(value, 10)) {\r\n                                    //$(\"#\" + fields).val(\"\");\r\n                                    $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                    let sBox = \"#SuggestionBox\" + j;\r\n                                    $(sBox).removeClass(\"hidden\");\r\n                                    $(sBox).html(\"<div class='errorMsgSuggestionBox'>Erroare!! DoarNumere sunt admise!! </div>\");\r\n                                    testOK = false;\r\n                                } else\r\n                                    if (currentValue.trim() === value) {\r\n                                        $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                        let sBox = \"#SuggestionBox\" + j;\r\n                                        $(sBox).removeClass(\"hidden\");\r\n                                        $(sBox).html(\"<span class='errorMsgSuggestionBox'>Erroare!! Ati introdus acelasi deja existent!!!</div>\");\r\n                                        testOK = false;\r\n                                    }\r\n\r\n                            } else\r\n                                if (fields.includes(\"printer_installed_date\")) {\r\n                                    let date = new Date(value);\r\n                                    if (date.toString() === \"Invalid Date\") {\r\n                                        $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                        let sBox = \"#SuggestionBox\" + j;\r\n                                        $(sBox).removeClass(\"hidden\");\r\n                                        $(sBox).html(\"<div class='errorMsgSuggestionBox'>Erroare!! Data Invalida YYYY-MM-DD</div>\");\r\n                                        testOK = false;\r\n                                    } else\r\n                                        if (currentValue.trim() === value) {\r\n                                            $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                            let sBox = \"#SuggestionBox\" + j;\r\n                                            $(sBox).removeClass(\"hidden\");\r\n                                            $(sBox).html(\"<span class='errorMsgSuggestionBox'>Erroare!! Ati introdus Acceasi data deja existenta!!!</div>\");\r\n                                            testOK = false;\r\n                                        }\r\n                                }\r\n                                else if (fields.includes(\"user_role\")) {\r\n                                    //console.log(this.suggestionInfoUserUpdate);\r\n                                    let testresult = this.suggestionInfoUserUpdate.find(item => item === value);\r\n                                    if (typeof testresult === \"undefined\") {\r\n                                        // $(\"#\" + fields).val(\"\");\r\n                                        $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                        let sBox = \"#SuggestionBox\" + j;\r\n                                        $(sBox).removeClass(\"hidden\");\r\n                                        $(sBox).html(\"<div class='errorMsgSuggestionBox'>Erroare!! Role Negasit in system!! Utizizati role din lista de mai jos:\" + this.suggestionInfoUserUpdate + \"</div>\");\r\n                                        testOK = false;\r\n                                    } else\r\n                                        if (currentValue.trim().toUpperCase() === testresult.toUpperCase()) {\r\n                                            $(\"#\" + fields).css(\"background-color\", \"rgba(170, 57, 57, 0.726)\");\r\n                                            let sBox = \"#SuggestionBox\" + j;\r\n                                            $(sBox).removeClass(\"hidden\");\r\n                                            $(sBox).html(\"<span class='errorMsgSuggestionBox'>Erroare!! Ati introdus role deja existent!!!</div>\");\r\n                                            testOK = false;\r\n                                        }\r\n                                }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (testOK) {\r\n            let finalTable = [];\r\n            //console.log(\"am inasdasdasdasdas\");\r\n            //json and sql parsing from inputs of --- json for update imprimante for location and staus only\r\n            let json = \"\";\r\n            let updateSql = \"\", store_name = \"\", existingStoreName = \"\", existingPrinterStatus = \"\", printer_status = \"\";\r\n            let historyChange = false;\r\n\r\n            for (let i = 0; i < this.state.storelist.length; i++) {\r\n                let temp = \"\", temp2 = \"\";\r\n                existingPrinterStatus = \"\";\r\n                printer_status = \"\";\r\n                store_name = \"\";\r\n                existingStoreName = \"\";\r\n                for (let j = 0; j < this.state.editableFields.length; j++) {\r\n\r\n                    let val = $(\"#\" + this.state.editableFields[j] + \"\" + i).val();\r\n                    let val2 = val;\r\n                    //convertesc store_name in store_id pt baza de date\r\n                    if (val.trim() !== \"\") {\r\n                        let storeConvert = \"\";\r\n\r\n                        if (this.state.editableFields[j] === \"printer_status\") {\r\n                            historyChange = true;\r\n                            printer_status = val2;\r\n                            existingPrinterStatus = $(\"#\" + this.state.editableFields[j] + \"\" + i).attr(\"placeholder\");\r\n                            temp2 += `\"${this.state.editableFields[j]}\":\"${val}\",`;\r\n                            if ($(\"#store_name\" + i).val() === \"\") {\r\n                                val2 = this.suggestionInfoUpdateImprimante.storelistMap.filter(item => {\r\n                                    return item.store_name === $(\"#store_name\" + i).attr(\"placeholder\");\r\n                                });\r\n                                val2 = val2[0].store_id;\r\n                                temp2 += `\"store_name\":\"${val2}\",`;\r\n                            }\r\n                        }\r\n\r\n                        if (this.state.editableFields[j] === \"store_name\") {\r\n                            historyChange = true;\r\n                            store_name = val;\r\n                            existingStoreName = $(\"#\" + this.state.editableFields[j] + \"\" + i).attr(\"placeholder\");\r\n                            storeConvert = \"store_id\";\r\n                            val = this.suggestionInfoUpdateImprimante.storelistMap.filter(item => {\r\n                                return item.store_name === val;\r\n                            });\r\n                            val2 = this.suggestionInfoUpdateImprimante.storelistMap.filter(item => {\r\n                                return item.store_name === val2;\r\n                            });\r\n                            val = val[0].store_id;\r\n                            val2 = val2[0].store_id;\r\n                            temp += `\"${storeConvert}\":\"${val}\",`;\r\n                            temp2 += `\"store_name\":\"${val2}\",`;\r\n                        }\r\n                        else {\r\n                            storeConvert = this.state.editableFields[j];\r\n                        }\r\n                        temp += `\"store_name\":\"${val}\",`;\r\n                        //temp2 += `\"store_name\":\"${val2}\",`;\r\n                        updateSql += \"\" + storeConvert + \"='\" + val + \"',\";\r\n                    }\r\n                }\r\n                if (temp.length > 1) {\r\n                    if (historyChange) {\r\n                        historyChange = false;\r\n                        let key = `{\"${this.state.deleteListIndexBy}\":\"${$('#' + i).text()}\",`\r\n                        temp = temp.substring(0, temp.length - 1);\r\n                        temp2 = temp2.substring(0, temp2.length - 1);\r\n                        json += key + temp2;\r\n                        //console.log(\"status: \", printer_status, \"nume: \", store_name);                \r\n\r\n                        if (printer_status.trim() === \"\") {\r\n                            json += ',\"changed_by\":\"' + sessionStorage.getItem('user_name') + '\",\"printers_history_notes\":\"Imprimanta trimisa de la Locatie: <' + existingStoreName + '> la Locatie: <' + store_name + '>\"},';\r\n                        } else if (store_name.trim() === \"\") {\r\n                            json += ',\"changed_by\":\"' + sessionStorage.getItem('user_name') + '\",\"printers_history_notes\":\"Status Updatat de la: <' + existingPrinterStatus + '> la: <' + printer_status + '>\"},';\r\n                        } else if (printer_status.trim() !== \"\" && store_name.trim() !== \"\") {\r\n                            json += ',\"changed_by\":\"' + sessionStorage.getItem('user_name') + '\",\"printers_history_notes\":\"Imprimanta a fost trimisa de la: <' + existingStoreName + '> La: <' + store_name + '> si statusul modificat de La: <' + existingPrinterStatus + '> La: <' + printer_status + '>\"},';\r\n                        }\r\n                    }\r\n                    else {\r\n                        //json += \"},\";\r\n                    }\r\n                    updateSql = updateSql.substring(0, updateSql.length - 1);\r\n                    finalTable = [...finalTable, i];\r\n                    updateSql += \" where \" + this.state.deleteListIndexBy + \"='\" + $('#' + i).text() + \"'$\";\r\n                }\r\n            }\r\n            updateSql = updateSql.substring(0, updateSql.length - 1);\r\n\r\n            //console.log(\"json=\", json);\r\n\r\n            if (json.length > 5) {\r\n                json = \"[\" + json.substring(0, json.length - 1) + \"]\";\r\n                json = '{\"storeChanges\":' + json + ',\"type\":\"STORE_USER_STATUS_CHANGE\"}';\r\n                let jsonTable = JSON.parse(json);\r\n                this.sqlCommandToUpdateHistory = Object.assign({}, jsonTable);\r\n                //console.log(this.sqlCommandToUpdateHistory);\r\n                //this.updateHistory();\r\n            }\r\n\r\n\r\n\r\n            //console.log(jsonTable);\r\n            // tablehistory = jsonTable.map(item => {\r\n            //     let date = new Date().toISOString().slice(0, 10) + \" \" + new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds();\r\n            //     let sql = \"INSERT INTO \" + this.state.table_name + \"(\"\r\n            //     if ((typeof item.store_id !== \"undefined\") && (typeof item.printer_status !== \"undefined\")) {\r\n            //         let sql = `INSERT INTO printers_history ( printers_history_date, printers_history_notes,\"\r\n            //         \"changed_by,store_id,printer_id) VALUES ('${date}','Imprimanta trimisa de la Locatie: la Locatie: ',\r\n            //         ${sessionStorage.getItem('user_name')},${item.store_id},${})`\r\n            //     }\r\n\r\n            //     if (typeof item.printer_status !== \"undefined\")\r\n            //         ps = item.printer_status;\r\n\r\n            // })\r\n\r\n            //\"UPDATE \" + this.state.table_name + \" SET \" + \r\n            //console.log(\"i=\", finalTable);\r\n            let sqlUpdatesList = updateSql.trim().split(\"$\").map((item, index) => {\r\n                let sqlCommand = (\"UPDATE \" + this.state.table_name + \" SET \" + item).toString();\r\n                return Object.assign({}, { sqlCommand: sqlCommand, rowAffected: finalTable[index], type: \"UPDATE_GENERAL\" });\r\n            })\r\n            //console.log(sqlUpdatesList);\r\n            this.sqlCommandToUpdateRecords = [...sqlUpdatesList];\r\n            $(\"#submitBtnRecord\").addClass(\"disabled\");\r\n            this.UpdateSqlRecords();\r\n            this.sendTrimisaLaMagazinEmail(JSON.parse(json));\r\n        }\r\n        //\r\n    }\r\n\r\n    emailTemplate = ({ changed_by, store_name, printer_brand, printer_model }) => {\r\n        let emailMsg = `\r\n        <html>\r\n        <head>\r\n        <title>Sezizare Noua</title>\r\n        </head>\r\n        <body>\r\n        <br/><br/>\r\n        &nbsp;&nbsp;&nbsp;<h3>Imprimanta Trimisa.</h3>\r\n        <br/><br/>\r\n        <table width=\"auto\" border=\"0\" cellspacing=\"3\" cellpadding=\"6\" style=\"border:1px solid #ccc;\">\r\n           <tr ><th>Creat De</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${changed_by}</td>\r\n           </tr>\r\n           <tr ><th>Nume Magazin</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${store_name}</td>\r\n           </tr>\r\n           <tr><th>Printer Brand</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${printer_brand}</td>\r\n           </tr>\r\n           <tr><th>Printer Model</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${printer_model}</td>\r\n           </tr>\r\n           <tr><th>Notite</th>\r\n           <td>Imprimanta in curs de trimitere</td>\r\n           </tr>           \r\n            </table>\r\n            <br/> <br/>\r\n\r\n            Cu respect,<br/>&nbsp;&nbsp;&nbsp;&nbsp;Echipa Imprimante Unicarm\r\n            </body>\r\n            </html>\r\n        `;\r\n        return emailMsg;\r\n    }\r\n\r\n    sendEmail = (configEmail) => {\r\n        let origin = window.origin;\r\n        //console.log(\"email to send: \" + configEmail);\r\n        axios.post(origin + '/api/SendMail', configEmail)\r\n            .then(function (data) {\r\n                //  console.log(data)\r\n            });\r\n    }\r\n\r\n    // async sendEmail(configEmail) {\r\n    //     // let emailmag = { ...configEmail, emailToAddress: configEmail.emailToAddress + \",\" + configEmail.store_name + \"@unicarm.ro\" };\r\n    //     // console.log(\"email to send: \", emailmag);\r\n    //     //let origin = window.origin;\r\n    //     await $.post('http://192.168.0.8:3030/imprimanteunicarm/backend/phpMail/SendMail.php', configEmail).done((data) => {\r\n    //         console.log(\"email response\", data);\r\n    //     });\r\n    // }\r\n\r\n    sendTrimisaLaMagazinEmail({ storeChanges }) {\r\n        let emailList = [];\r\n        //console.log(storeChanges);\r\n        // console.log(this.suggestionInfoUpdateImprimante);\r\n        storeChanges.forEach(item => {\r\n            if (item.printer_status === \"Trimisa la Magazin\") {\r\n                emailList.push(\r\n                    {\r\n                        changed_by: item.changed_by,\r\n                        printer_brand: this.state.storelist.find(store => store.printer_sn === item.printer_sn).printer_brand,\r\n                        printer_model: this.state.storelist.find(store => store.printer_sn === item.printer_sn).printer_model,\r\n                        store_name: this.suggestionInfoUpdateImprimante.storelistMap.find(store => store.store_id === item.store_name).store_name\r\n                    }\r\n                )\r\n            }\r\n        });\r\n\r\n        if (emailList.length !== 0) {\r\n            emailList.forEach(item => {\r\n                let template = this.emailTemplate(item);\r\n                let configEmail = {\r\n                    emailMsg: template,\r\n                    emailSubject: \"Imprimtanta in curs de trimitere catre - \" + item.store_name,\r\n                    emailToAddress: \"it@unicarm.ro,\" + item.store_name + \"@unicarm.ro\",\r\n                    type: \"SesizareNouaEmail\",\r\n                    store_name: item.store_name\r\n                }\r\n                this.sendEmail(configEmail);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleFocus = (e) => {\r\n        $(\"#\" + e.target.id).val(\"\");\r\n        $(\"#\" + e.target.id).css(\"background-color\", \"white\");\r\n        let tid = \"\" + e.target.id;\r\n        let index = tid.substring(tid.length - 1, tid.length);\r\n        let sBox = \"#SuggestionBox\" + index;\r\n        $(sBox).addClass(\"hidden\");\r\n        $(sBox).html(\"\");\r\n    }\r\n\r\n    handleBlur = (e) => {\r\n        // console.log(e.target.id);\r\n        let tid = \"\" + e.target.id;\r\n        let index = tid.substring(tid.length - 1, tid.length);\r\n        let sBox = \"#\" + e.target.id + \"+#SuggestionBox\" + index;\r\n        let suggesteVal = $(sBox).text();\r\n        if (suggesteVal.length > 1 && !suggesteVal.trim().includes(\"Erroare\"))\r\n            e.target.value = suggesteVal;\r\n        $(sBox).addClass(\"hidden\");\r\n\r\n    }\r\n\r\n\r\n    handleTypeChange = (e) => {\r\n        //$(\"#\" + e.target.id).css(\"background-color\", \"white\");\r\n        //let tid = \"\" + e.target.id;\r\n        //let index = tid.substring(tid.length - 1, tid.length);\r\n        //let sBox = \"#SuggestionBox\" + index;\r\n        //$(sBox).addClass(\"hidden\");\r\n        //$(sBox).html(\"\");\r\n\r\n\r\n        if (this.state.table_name === \"store_info\") {\r\n            let tid = \"\" + e.target.id;\r\n            let index = tid.substring(tid.length - 1, tid.length);\r\n            let sBox = \"#SuggestionBox\" + index;\r\n            let inputVal = e.target.value;\r\n            $(sBox).html(\"\");\r\n            if (e.target.value.length >= 1) {\r\n                let sulist = this.suggestionInfoToGetFromTable.store_location.filter((item, index) => {\r\n                    return item.toString().toUpperCase().startsWith(inputVal.toUpperCase());\r\n                }).map(item => {\r\n                    return \"<p class='handleChangeSuggestion'>\" + item + \"</p>\";\r\n                });\r\n\r\n                if ((typeof sulist[0] !== \"undefined\")) {\r\n                    if (sulist[0].length > 2) {\r\n                        $(sBox).removeClass(\"hidden\");\r\n                        $(sBox).html(sulist[0]);\r\n                    }\r\n                } else {\r\n                    $(sBox).html(\"\");\r\n                    $(sBox).addClass(\"hidden\");\r\n                }\r\n            } else {\r\n                $(sBox).addClass(\"hidden\");\r\n            }\r\n        } else if (this.state.table_name === \"printer_users\") {\r\n\r\n            if (e.target.id.toString().startsWith(\"user_role\")) {\r\n                let tid = \"\" + e.target.id;\r\n                let index = tid.substring(tid.length - 1, tid.length);\r\n                let sBox = \"#SuggestionBox\" + index;\r\n                let inputVal = e.target.value;\r\n                $(sBox).html(\"\");\r\n                if (e.target.value.length >= 1) {\r\n                    let sulist = this.suggestionInfoUserUpdate.filter((item, index) => {\r\n                        return item.toString().toUpperCase().startsWith(inputVal.toUpperCase());\r\n                    }).map(item => {\r\n                        return \"<p class='handleChangeSuggestion'>\" + item + \"</p>\";\r\n                    });\r\n\r\n                    if ((typeof sulist[0] !== \"undefined\")) {\r\n                        if (sulist[0].length > 2) {\r\n                            $(sBox).removeClass(\"hidden\");\r\n                            $(sBox).html(sulist[0]);\r\n                        }\r\n                    } else {\r\n                        $(sBox).html(\"\");\r\n                        $(sBox).addClass(\"hidden\");\r\n                    }\r\n                } else {\r\n                    $(sBox).addClass(\"hidden\");\r\n                }\r\n            }\r\n        } else if (this.state.table_name === \"printers\") {\r\n\r\n            if (e.target.id.toString().startsWith(\"printer_status\")) {\r\n                let tid = \"\" + e.target.id;\r\n                let index = tid.substring(tid.length - 1, tid.length);\r\n                let sBox = \"#printer_status\" + index + \"+#SuggestionBox\" + index;\r\n                //console.log(sBox);\r\n                let inputVal = e.target.value;\r\n                $(sBox).html(\"\");\r\n                if (e.target.value.length >= 1) {\r\n                    let sulist = this.suggestionInfoUpdateImprimante.printer_status.filter((item, index) => {\r\n                        return item.toString().toUpperCase().startsWith(inputVal.toUpperCase());\r\n                    }).map(item => {\r\n                        return \"<p class='handleChangeSuggestion'>\" + item + \"</p>\";\r\n                    });\r\n\r\n                    if ((typeof sulist[0] !== \"undefined\")) {\r\n                        if (sulist[0].length > 2) {\r\n                            $(sBox).removeClass(\"hidden\");\r\n                            $(sBox).html(sulist[0]);\r\n                        }\r\n                    } else {\r\n                        $(sBox).html(\"\");\r\n                        $(sBox).addClass(\"hidden\");\r\n                    }\r\n                } else {\r\n                    $(sBox).addClass(\"hidden\");\r\n                }\r\n            } else if (e.target.id.toString().startsWith(\"store_name\")) {\r\n                let tid = \"\" + e.target.id;\r\n                let index = tid.substring(tid.length - 1, tid.length);\r\n                let sBox = \"#SuggestionBox\" + index;\r\n                let inputVal = e.target.value;\r\n                $(sBox).html(\"\");\r\n                if (e.target.value.length >= 1) {\r\n                    let sulist = this.suggestionInfoUpdateImprimante.store_location.filter((item, index) => {\r\n                        return item.toString().toUpperCase().startsWith(inputVal.toUpperCase());\r\n                    }).map(item => {\r\n                        return \"<p class='handleChangeSuggestion'>\" + item + \"</p>\";\r\n                    });\r\n\r\n                    if ((typeof sulist[0] !== \"undefined\")) {\r\n                        if (sulist[0].length > 2) {\r\n                            $(sBox).removeClass(\"hidden\");\r\n                            $(sBox).html(sulist[0]);\r\n                        }\r\n                    } else {\r\n                        $(sBox).html(\"\");\r\n                        $(sBox).addClass(\"hidden\");\r\n                    }\r\n                } else {\r\n                    $(sBox).addClass(\"hidden\");\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    returnTableHeader = this.props.state.viewTableFildsList.map((item, index) => {\r\n        return <th id={this.props.state.sqlTableFildsList[index]} key={index}>{item}</th>;\r\n    })\r\n\r\n\r\n    handleClickChange = (e) => {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid fadeincontainer\">\r\n                <div className=\"row fadein\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <table className=\"table table-bordered table-striped table-responsive table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {this.state.viewTableFildsList.length !== 0 && this.state.viewTableFildsList.map((item, index) => {\r\n                                        return <th id={this.state.sqlTableFildsList[index]} key={index}>{item}</th>;\r\n                                    })}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.storelist.length !== 0 && this.state.storelist.map((item, index) => {\r\n                                        return <RenderComponent key={index} handleFocus={this.handleFocus} handleBlur={this.handleBlur} handleTypeChange={this.handleTypeChange} editableFields={this.state.editableFields} sqlTableFildsList={this.state.sqlTableFildsList} index={index} item={item} />\r\n                                    })\r\n                                }\r\n                                <tr><td id=\"EmptySpan\" className=\"info\" colSpan={this.state.viewTableFildsList.length}>Empty</td></tr>\r\n                            </tbody>\r\n                        </table><br />\r\n                        <button onSubmit={this.handleSubmit} id=\"submitBtnRecord\" className=\"btn\">Inregistraza Modificari</button>\r\n                        &nbsp;&nbsp; <span onClick={this.resetFieldsInfoBtn} className=\"btn btn-danger btn-bg-reg\">Reseteaza Campuri</span>\r\n                        <br /><br /></form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComponentaUpdateGeneral\r\n","import React, { Component } from 'react'\r\n// import RenderTableView from '../componentaVizualizareGenerala/RenderTableView'\r\nimport ComponentaUpdateGeneral from '../../componenteTemplate/ComponentaUpdateGeneral/ComponentaUpdateGeneral'\r\nimport $ from 'jquery'\r\n\r\n\r\nclass UpdatareInformatii extends Component {\r\n    state = {\r\n        type: \"General_Listing\",\r\n        viewTableFildsList: [\"Nume Utilizator\", \"Role Utilizator\", \"Parola\", \"Data Ultima Logare\"],\r\n        sqlTableFildsList: [\"user_name\", \"user_role\", \"user_password\", \"user_last_login\"],\r\n        editableFields: [\"user_role\", \"user_password\"],\r\n        sqlcommand: \"select user_name,user_role,user_password, user_last_login from printer_users ORDER BY user_name ASC\",\r\n        storelist: [],\r\n        table_name: \"printer_users\",\r\n        deleteListIndexBy: \"user_name\",\r\n        response: \"\",\r\n        selected_function: \"true\",\r\n        suggestionInfoToGetFromTable: \"\"\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n    handleChangeSelect = (e) => {\r\n        const selectedOption = $(e.target).val();\r\n        if (selectedOption === \"Update Magazin\") {\r\n            this.setState({\r\n                ...this.state,\r\n                type: \"General_Listing\",\r\n                viewTableFildsList: [\"Name Magazin\", \"Locatie Magazin\"],\r\n                sqlTableFildsList: [\"store_name\", \"store_location\"],\r\n                editableFields: [\"store_location\"],\r\n                sqlcommand: \"select store_name, store_location from store_info ORDER BY store_name ASC\",\r\n                storelist: [],\r\n                table_name: \"store_info\",\r\n                deleteListIndexBy: \"store_name\",\r\n                response: \"\",\r\n                selected_function: \"true\",\r\n                suggestionInfoToGetFromTable: \"\"\r\n            })\r\n        }\r\n\r\n        if (selectedOption === \"Update Useri\") {\r\n            this.setState({\r\n                ...this.state,\r\n                type: \"General_Listing\",\r\n                viewTableFildsList: [\"Nume Utilizator\", \"Role Utilizator\", \"Parola\", \"Data Ultima Logare\"],\r\n                sqlTableFildsList: [\"user_name\", \"user_role\", \"user_password\", \"user_last_login\"],\r\n                editableFields: [\"user_role\", \"user_password\"],\r\n                sqlcommand: \"select user_name,user_role,user_password, user_last_login from printer_users ORDER BY user_name ASC\",\r\n                storelist: [],\r\n                table_name: \"printer_users\",\r\n                deleteListIndexBy: \"user_name\",\r\n                response: \"\",\r\n                selected_function: \"true\",\r\n                suggestionInfoToGetFromTable: \"\"\r\n            })\r\n        }\r\n\r\n        if (selectedOption === \"Update Imprimante\") {\r\n            this.setState({\r\n                ...this.state,\r\n                type: \"General_Listing\",\r\n                viewTableFildsList: [\"Serie\", \"Brand\", \"Model\", \"Locatie\", \"Status\", \"Pret Lista\", \"Data Instalarii\"],\r\n                sqlTableFildsList: [\"printer_sn\", \"printer_brand\", \"printer_model\", \"store_name\", \"printer_status\", \"printer_list_price\", \"printer_installed_date\"],\r\n                editableFields: [\"store_name\", \"printer_status\", \"printer_list_price\", \"printer_installed_date\"],\r\n                sqlcommand: \"select p.printer_brand printer_brand,p.printer_model printer_model,p.printer_sn printer_sn,s.store_name store_name,p.printer_status printer_status,p.printer_list_price printer_list_price,p.printer_installed_date printer_installed_date from printers p, store_info s where p.store_id = s.store_id\",\r\n                storelist: [],\r\n                table_name: \"printers\",\r\n                deleteListIndexBy: \"printer_sn\",\r\n                response: \"\",\r\n                selected_function: \"true\",\r\n                suggestionInfoToGetFromTable: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    functionSelect = () => {\r\n\r\n        return (\r\n            <div onChange={this.handleChangeSelect.bind(this)} className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* col-md-offset-3 */}\r\n                    <div className=\"col-md-4 col-centered margin-top-2rem\">\r\n                        <div className=\"input-field \">\r\n                            <select defaultValue=\"Update Useri\" id=\"function_select\" className=\"validatefield5 browser-default\">\r\n                                <option disabled >Selecteaza o optiune</option>\r\n                                <option >Update Useri</option>\r\n                                <option>Update Magazin</option>\r\n                                <option>Update Imprimante</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        //console.log(\"rerender\", this.state);\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-sm12\">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <h3 className=\"col-centered-h\">{this.state.componentTitle}</h3>\r\n                            <this.functionSelect />\r\n                            <ComponentaUpdateGeneral state={Object.assign({}, { ...this.state })} />\r\n                            <br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdatareInformatii\r\n","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport axios from 'axios'\r\nimport ModalWindow from '../../administrare/ModalComponent/ModalWindow'\r\n\r\nclass SesizareProblemaNoua extends Component {\r\n    state = {\r\n        storelist: [],\r\n        logProblemOptions: [],\r\n        result: \"\",\r\n        nuGasescSerie: \"false\",\r\n        detaliiImprimanta: {},\r\n        foundPrinters: [],\r\n        validateCount: 5,\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\"\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n\r\n    }\r\n\r\n    sendEmail = (configEmail) => {\r\n        let origin = window.origin;\r\n        //console.log(\"email to send: \" + configEmail);\r\n        axios.post(origin + '/api/SendMail', configEmail)\r\n            .then(function (data) {\r\n                // console.log(data)\r\n            });\r\n    }\r\n\r\n    // async sendEmail(configEmail) {\r\n    //     //let origin = window.origin;\r\n    //     await $.post('http://192.168.0.8:3030/imprimanteunicarm/backend/phpMail/SendMail.php', configEmail)\r\n    //         .done(function (data) {\r\n    //             // alert(\"Data Loaded: \" + data);\r\n    //         });\r\n    // }\r\n\r\n\r\n    handleSelectPrinterSN = (e) => {\r\n        // console.log(this.state);\r\n        // console.log(e.target.value.split(\"~\")[2]);\r\n        let test = this.state.foundPrinters.find(item => item.printer_sn === e.target.value.split(\"~\")[2]).status_sesizare;\r\n        if (test === \"active\") {\r\n            $('#printer_sn').prop('selected', false).find('option:first').prop('selected', true);\r\n            this.validatorPrinterSN(\"\", \"Exista deja o sesizare pentru dispozitivul selectat,selectati altul sau pentru mai multe detalii contactati IT\", \"Eroare!!!\");\r\n        } else {\r\n            $(\"#nuGasescSeriaBtn\").addClass(\"disabled\");\r\n        }\r\n        //$(\"#printer_sn\").attr(\"disabled\");\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        //console.log(this.state);\r\n        //$(\"#printer_sn\").attr(\"disabled\");\r\n\r\n    }\r\n\r\n    // afiseaza un mesaj cu msg si titlu pentru popup caz de eroare\r\n    validatorPrinterSN = (printerSn, msg, title) => {\r\n        let allOK = true;\r\n        if (printerSn.trim() === \"\") allOK = false;\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: title,\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n\r\n    handleBackButton = (e) => {\r\n        $(\"#printer_sn\").removeClass('disabled');\r\n        $(\"#nuGasescSeriaBtn\").removeClass(\"disabled\");\r\n        let newObj = Object.assign({}, {\r\n            nume_magazin: \"\",\r\n            locatie_magazin: \"\",\r\n            result: \"\",\r\n            foundPrinters: [],\r\n            detaliiImprimanta: {},\r\n            nuGasescSerie: \"false\"\r\n        });\r\n        this.setState(newObj);\r\n    }\r\n\r\n    formValidator = () => {\r\n\r\n    }\r\n\r\n    /// verifica daca seria imrimantei este gasita in system daca da o introduce in obiectul state a clasei\r\n    printerSnDBSearch = (store_id) => {\r\n        let cautareImprimanta = { type: \"Listare_Imprimanta_dupa_magazin\", store_id: store_id };\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', cautareImprimanta)\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                try {\r\n                    const { response } = JSON.parse(res.data);\r\n                    //console.log(store_location);\r\n                    if (response === \"imprimanta_negasita\") {\r\n                        $(\"#nuGasescSeriaBtn\").removeClass(\"disabled\");\r\n                        this.validatorPrinterSN(\"\", \"Nu s-a putut gasii nici o imprimanta in sistem pentru magazinul dumneavoastra apasati pe butonul 'NU GASESC DISPOZITIV' pentru a introduce imprimanta manual\", \"Nici un dispozitiv nu s-a gasit In Sistem!!!\");\r\n                        let newObj = Object.assign({}, {\r\n                            nume_magazin: \"\",\r\n                            locatie_magazin: \"\",\r\n                            result: \"\",\r\n                            foundPrinters: [],\r\n                            detaliiImprimanta: {},\r\n                            nuGasescSerie: \"false\"\r\n                        });\r\n                        this.setState(newObj);\r\n                    }\r\n                    if (response === \"detaliiImprimanta\") {\r\n                        // $(\"#printer_sn\").attr(\"disabled\");\r\n                        $(\"#nuGasescSeriaBtn\").removeClass('disabled');\r\n                        this.setState({\r\n                            nuGasescSerie: \"false\"\r\n                        });\r\n                        const { detaliiImprimanta } = JSON.parse(res.data);\r\n                        // $(\"#printer_sn\").val(\"GASIT: \" + detaliiImprimanta.printer_brand + \" - \" + detaliiImprimanta.printer_model);\r\n                        // $(\"#printer_sn\").attr('disabled', 'disabled');\r\n                        // $(\"#printer_sn\").addClass('disabled');\r\n                        // $(\"#cautaDetaliiImprimanta\").addClass(\"disabled\");\r\n                        // $(\"#printer_sn\").css(\"background-color\", \"#0074D9\");\r\n                        // $(\"#nuGasescSeriaBtn\").addClass(\"disabled\");\r\n\r\n                        this.setState({ ...this.state, foundPrinters: detaliiImprimanta });\r\n                        //console.log(this.state);\r\n\r\n                    }\r\n                } catch (e) {\r\n                    // console.error(e);\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleStoreChange = (e) => {\r\n\r\n        let store_name = this.state.storelist.find(item => {\r\n            return item.store_name === e.target.value\r\n        });\r\n        $('#printer_sn').prop('selected', false).find('option:first').prop('selected', true);\r\n        this.printerSnDBSearch(store_name.store_id);\r\n    }\r\n\r\n    // preia toate comenzile click\r\n    handleClick = (e) => {\r\n        if (e.target.id === \"cautaDetaliiImprimanta\") {\r\n\r\n            if ($(\"#printer_sn\").val() === null) {\r\n                this.validatorPrinterSN(\"\", \"Selectati Seria Dispozitivului Dumneavoastra sau apasati 'NU GASESC DISPOZITIV' daca nu o gaseste sistemul'\", \"Informatii Incorecte!!!\");\r\n            }\r\n        }\r\n        if (e.target.id === \"nuGasescSeriaBtn\") {\r\n            if (typeof this.state.detaliiImprimanta.printer_id === \"undefined\") {\r\n                //$(\"#printer_sn\").attr('disabled', 'disabled');\r\n                $(\"#printer_sn\").addClass('disabled');\r\n                $(\"#nuGasescSeriaBtn\").addClass(\"disabled\");\r\n                this.setState({ ...this.state, nuGasescSerie: \"true\" });\r\n                $(\"#cautaDetaliiImprimanta\").addClass(\"disabled\");\r\n            }\r\n        }\r\n    }\r\n    //verifica daca un field este gol\r\n    isEmpty = (field) => {\r\n        if (field === null || typeof field === \"undefined\" || field === \"\")\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    /// valideaza toate fieldurile in formular\r\n    formValidator = () => {\r\n        //console.log($(\"#printer_sn\").hasClass('disabled'));\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        //console.log(this.state);\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            if (typeof $(\".validatefield\" + i).val() !== \"undefined\") {\r\n                if (this.isEmpty($(\".validatefield\" + i).val()) !== null) {\r\n                    if (this.isEmpty($(\".validatefield\" + i).val())) {\r\n                        if (!$(\".validatefield\" + i).hasClass(\"disabled\")) {\r\n                            let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                            msg += \"<p> \" + text + \" </p>\";\r\n                            allOK = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if ((allOK && !$(\"#printer_sn\").hasClass('disabled'))) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Eroare!!!\",\r\n                modal_body: \"Seria Dispozitivului Trebuie validata mai intai!!! Introduceti seria si apasati pe 'VALIDARE SERIE'!\"\r\n            })\r\n        }\r\n\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n    }\r\n\r\n    /// daca validarea este ok se poate creea obiectul care va fi trimis la baza de date pentru a putea fi introdus\r\n    introduSesizareNoua = () => {\r\n\r\n        //console.log();\r\n\r\n        let store_id_name = this.state.storelist.filter(item => item.store_name === $(\"#store_id_name\").val());\r\n        let store_id = store_id_name[0].store_id;\r\n\r\n        //let printer_sn = $(\"#printer_sn\").val();//de verificat\r\n\r\n        let problem_options_name = $(\"#problem_options_name\").val();\r\n        let sesizari_log_problem_description = $.trim($(\"#sesizari_log_problem_description\").val());\r\n        //console.log(this.state);\r\n        let adaugaSesizareInSistem;\r\n\r\n        if (!$(\"#printer_sn\").hasClass('disabled')) {\r\n            //console.log(\"this.state.detaliiImprimanta.printer_id\", this.state.detaliiImprimanta.printer_id);\r\n            adaugaSesizareInSistem = {\r\n                type: \"Adauga_Sesizare_In_Sistem_cu_serie_imprimanta_existenta\",\r\n                store_id: store_id,\r\n                printer_id: this.state.foundPrinters.find(item => item.printer_sn === $(\"#printer_sn\").val().split(\"~\")[2]).printer_id,\r\n                sesizari_log_problem: problem_options_name,\r\n                sesizari_log_problem_description: sesizari_log_problem_description,\r\n                changed_by: sessionStorage.getItem(\"user_name\")\r\n            }\r\n            this.setState({ ...this.state, detaliiImprimanta: {} });\r\n        }\r\n\r\n        if ($(\"#printer_sn\").hasClass('disabled')) {\r\n            let printer_brand = $(\"#printer_brand\").val();\r\n            let printer_model = $(\"#printer_model\").val();\r\n            let new_printer_sn = $(\"#new_printer_sn\").val();\r\n\r\n            if (new_printer_sn === \"\")\r\n                new_printer_sn = \"genericSNstoreid:\" + store_id + \":prnmodel:\" + printer_model + \":mathrand:\" + Math.floor(Math.random() * 50);\r\n\r\n            adaugaSesizareInSistem = {\r\n                type: \"Adauga_Sesizare_In_Sistem_fara_serie_imprimanta\",\r\n                store_id: store_id,\r\n                new_printer_sn: new_printer_sn,\r\n                printer_brand: printer_brand,\r\n                printer_model: printer_model,\r\n                sesizari_log_problem: problem_options_name,\r\n                sesizari_log_problem_description: sesizari_log_problem_description,\r\n                changed_by: sessionStorage.getItem(\"user_name\")\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //console.log(adaugaSesizareInSistem);\r\n        //console.log(this.state);\r\n        let printer_brand = \"\";\r\n        let printer_model = \"\";\r\n        if (this.state.nuGasescSerie === \"false\") {\r\n            printer_brand = this.state.foundPrinters.find(item => item.printer_id === adaugaSesizareInSistem.printer_id).printer_brand;\r\n            printer_model = this.state.foundPrinters.find(item => item.printer_id === adaugaSesizareInSistem.printer_id).printer_model;\r\n        } else {\r\n            printer_brand = adaugaSesizareInSistem.printer_brand\r\n            printer_model = adaugaSesizareInSistem.printer_model\r\n        }\r\n\r\n\r\n\r\n        let store_name = this.state.storelist.find(item => item.store_id === adaugaSesizareInSistem.store_id).store_name;\r\n        let emailMsg = `\r\n        <html>\r\n        <head>\r\n        <title>Sezizare Noua</title>\r\n        </head>\r\n        <body>\r\n        <br/><br/>\r\n        &nbsp;&nbsp;&nbsp;<h3>S-a creat o sezizare noua pentru Imprimanta detaliata mai jos</h3>\r\n        <br/><br/>\r\n        <table width=\"auto\" border=\"0\" cellspacing=\"3\" cellpadding=\"6\" style=\"border:1px solid #ccc;\">\r\n           <tr ><th>Creat De</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${adaugaSesizareInSistem.changed_by}</td>\r\n           </tr>\r\n           <tr ><th>Nume Magazin</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${store_name}</td>\r\n           </tr>\r\n           <tr><th>Printer Brand</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${printer_brand}</td>\r\n           </tr>\r\n           <tr><th>Printer Model</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${printer_model}</td>\r\n           </tr>\r\n           <tr><th>Problema</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${adaugaSesizareInSistem.sesizari_log_problem}</td>\r\n           </tr>\r\n           <tr><th>Descriere</th>\r\n           <td>${adaugaSesizareInSistem.sesizari_log_problem_description}</td>\r\n           </tr>           \r\n            </table>\r\n            <br/> <br/>\r\n        \r\n            Cu respect,<br/>&nbsp;&nbsp;&nbsp;&nbsp;Sesizari Imprimante Unicarm\r\n            </body>\r\n            </html>\r\n        `;\r\n\r\n\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Updates', adaugaSesizareInSistem)\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                try {\r\n                    const { response } = JSON.parse(res.data);\r\n                    //console.log(store_location);\r\n                    if (response.toString().startsWith(\"InregistrareaExista\")) {\r\n                        this.validatorPrinterSN(\"\", \"Daca nu gasiti Seria Dispozitivului sau daca sistemul nu o gaseste apasati butonul - NU GASESC DISPOZITIV\", \"Dispozitiv Negasit In Sistem!!!\");\r\n                        $(\"#cautaDetaliiImprimanta\").removeClass(\"disabled\");\r\n                        this.setState({\r\n                            ...this.state,\r\n                            result: \"InregistrareaExista\",\r\n                        })\r\n                    }\r\n                    if (response.toString().startsWith(\"Record Updated\")) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            result: \"Record Updated\",\r\n                        })\r\n                        let configEmail = {\r\n                            emailMsg: emailMsg,\r\n                            emailSubject: \"Sesizare Noua - \" + store_name,\r\n                            emailToAddress: \"it@unicarm.ro,\" + store_name + \"@unicarm.ro\",\r\n                            type: \"SesizareNouaEmail\",\r\n                            store_name: store_name\r\n                        }\r\n                        //console.log(this.configEmail);\r\n                        this.sendEmail(configEmail);\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n            });\r\n    }\r\n\r\n    // preia comanda de la trimiterea formularului\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.formValidator()) {\r\n            this.introduSesizareNoua();\r\n        }\r\n\r\n\r\n        // console.log(store_id_name, \" - \", printer_sn, \" - \", problem_options_name, \" - \", sesizari_log_problem_description);\r\n\r\n        // console.log(\" -> \", printer_brand, \" - \", printer_model, \" - \", new_printer_sn);\r\n\r\n\r\n    }\r\n\r\n    /// populeaza lista de magazine pentru formular\r\n    updateStateStoreList = () => {\r\n        const newObj = Object.assign({}, { payload: \"NONE\" }, { type: \"Listare_Magazine\" });\r\n        if (this.state.storelist.length === 0) {\r\n            var th = this;\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Listare', newObj)\r\n                .then((res) => {\r\n                    //console.log(res)\r\n                    try {\r\n                        const { response, store_location } = JSON.parse(res.data);\r\n                        //console.log(store_location);\r\n                        if (response === \"StoreLocationSugestion\") {\r\n                            this.setState({ ...this.state, storelist: [...store_location] });\r\n                            setTimeout(() => {\r\n                                th.updateStateLogProblemOptions();\r\n                            }, 500);\r\n                            //console.log(this.state);\r\n                        }\r\n                    } catch (e) {\r\n                        //console.error(e);\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n            var today = new Date();\r\n            this.setState({\r\n                ...this.state,\r\n                date: today\r\n            });\r\n        }\r\n    }\r\n\r\n    // componenta in caz de nu se beneficiaza de serie de imprimanta ori daca aceasta nu exista\r\n    componentaNuGasescImprimanta = () => {\r\n        return (\r\n            <div className=\"col-md-12\"><br />\r\n                <div className=\"form-group\">\r\n                    <label id=\"validatefieldmsg3\" className=\"text-medium text-danger\" htmlFor=\"validatefield3\">*Brand Imprimanta</label>\r\n                    <input type=\"text\" className=\"validatefield3 form-control\" id=\"printer_brand\" placeholder=\"Brand Imprimanta\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label id=\"validatefieldmsg4\" className=\"text-medium text-danger\" htmlFor=\"validatefield4\">*Model Imprimanta</label>\r\n                    <input type=\"text\" className=\"validatefield4 form-control printer_model\" id=\"printer_model\" placeholder=\"Model Imprimanta\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-medium text-info\" htmlFor=\"new_printer_sn\">*Serie Imprimanta daca o gasiti</label>\r\n                    <input defaultValue={$(\"#printer_sn\").val() && $(\"#printer_sn\").val().toString()} type=\"text\" className=\"form-control\" id=\"new_printer_sn\" placeholder=\"Serie Imprimanta\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //preia din baza de date lista de optiuni disponibile pentru a selecta problema generala la imrpimanta\r\n    updateStateLogProblemOptions = () => {\r\n        const newObj = Object.assign({}, { payload: \"NONE\" }, { type: \"Listare_Log_Problem_Options\" });\r\n        if (this.state.logProblemOptions.length === 0) {\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Listare', newObj)\r\n                .then((res) => {\r\n                    //console.log(res)\r\n                    try {\r\n                        const { response, logProblemOptions } = JSON.parse(res.data);\r\n                        //console.log(store_location);\r\n                        if (response === \"LogProblemOptions\") {\r\n                            this.setState({ ...this.state, logProblemOptions: [...logProblemOptions] });\r\n                            //console.log(this.state);\r\n                        }\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n            var today = new Date();\r\n            this.setState({\r\n                ...this.state,\r\n                date: today\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n        if (sessionStorage.getItem('role') !== \"admin\" && sessionStorage.getItem('role') !== \"store\" && sessionStorage.getItem('role') !== \"storeraport\")\r\n            this.props.history.push('/');\r\n        this.updateStateStoreList();\r\n    }\r\n\r\n    // compponenta select de a lista magazinele disponibile\r\n    listaMagazine = () => {\r\n        let user_name = sessionStorage.getItem(\"user_name\").toUpperCase();\r\n        let found = this.state.storelist.find(item => item.store_name === user_name);\r\n        //console.log(found);\r\n        if (typeof found === \"undefined\") {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"input-field col s12 m6\">\r\n                        <select onChange={this.handleStoreChange} id=\"store_id_name\" defaultValue=\"Magazine\" className=\"validatefield1 browser-default\">\r\n                            <option disabled >Magazine</option>\r\n                            {this.state.storelist.map((item, i) => {\r\n                                return <option key={i}>{item['store_name']}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"input-field col s12 m6\">\r\n                        <select onChange={this.handleStoreChange} id=\"store_id_name\" defaultValue={found.store_name} className=\"validatefield1 browser-default\">\r\n                            <option>{found.store_name}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    /// componenta select de a selecta problemele generala \r\n    listaOptiuniProbleme = () => {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col-md-8\">\r\n                        <select id=\"problem_options_name\" defaultValue=\"Selectati Problema Dispozitiv\" className=\"validatefield5 browser-default\">\r\n                            <option disabled >Selectati Problema Dispozitiv</option>\r\n                            {this.state.logProblemOptions.map((item, i) => {\r\n                                return <option key={i}>{item['problem_options_name']}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    /// componenta generala a paginei\r\n    sesizareComponent = () => {\r\n        if (this.state.result === \"\") {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row row-no-gutters\">\r\n                                <div className=\"col-md-12\">\r\n                                    <label id=\"validatefieldmsg1\" className=\"text-info text-medium\" htmlFor=\"nume_magazin\">*Alege Locatie Magazin</label>\r\n                                    <this.listaMagazine />\r\n                                    {/* <input onChange={this.handleChange} type=\"text\" className=\"validatefield1 form-control\" id=\"nume_magazin\" placeholder=\"Nume Magazin\" /> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row row-no-gutters\">\r\n                                <div className=\"col-md-12\">\r\n                                    <label id=\"validatefieldmsg2\" className=\"text-info text-medium\" htmlFor=\"validatefield2\">*Introdu Detalii Dispozitiv Defect</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row row-no-gutters\">\r\n                                <div className=\"col-md-5 col-sm-12 col-xs-12\">\r\n                                    <select onChange={this.handleSelectPrinterSN} className=\"browser-default validatefield2\" id=\"printer_sn\" defaultValue=\"Dispozitive Gasite\">\r\n                                        <option disabled >Dispozitive Gasite</option>\r\n                                        {this.state.foundPrinters.map((item, i) => {\r\n                                            return <option key={i}>{item.printer_brand + \"~\" + item.printer_model + \"~\" + item.printer_sn}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    {/* <input type=\"text\" className=\"form-control validatefield2\" id=\"printer_sn\" placeholder=\"Introdu Serie Imprimanta\" /> */}\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4 col-sm-12 col-xs-12 margin-top-2rem-md margin-bottom-2rem-md\">\r\n                                    <span onClick={this.handleClick} id=\"nuGasescSeriaBtn\" className=\"btn btn-primary\">NU GASESC DISPOZITIV</span>\r\n                                </div>\r\n                                {this.state.nuGasescSerie === \"true\" && <this.componentaNuGasescImprimanta />}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <this.listaOptiuniProbleme /> */}\r\n                        {/* <input onChange={this.handleChange} type=\"text\" className=\"validatefield2 form-control\" id=\"locatie_magazin\" placeholder=\"Nume Magazin\" /> */}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <label id=\"validatefieldmsg5\" className=\"text-info text-medium\" htmlFor=\"locatie_magazin\">*Alege Problema Imprimanta</label>\r\n                                    <this.listaOptiuniProbleme />\r\n                                    {/* <input onChange={this.handleChange} type=\"text\" className=\"validatefield2 form-control\" id=\"locatie_magazin\" placeholder=\"Nume Magazin\" /> */}\r\n                                </div></div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-9\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-info text-small padding-bottom\" htmlFor=\"sesizari_log_problem_description\">Introduceti mai multe detalii despre problema:</label>\r\n                                        <br />\r\n                                        <textarea className=\"form-control\" rows=\"5\" id=\"sesizari_log_problem_description\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <button onSubmit={this.handleSubmit} id=\"submitBtnRecord\" className=\"btn btn-primary\">+ Salveaza Sesizare</button>\r\n                                </div>\r\n                            </div>\r\n                        </div></div>\r\n                </form >\r\n            )\r\n        } else if (this.state.result === \"Record Updated\") {\r\n            return (\r\n                <div className=\"alert alert-success\">\r\n                    <strong >Sesizare Introdusa cu Succes</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-ok\"></span> Inapoi</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-danger\">\r\n                    Magazinul deja exista<strong > Eroare de sistem!!!Contactati IT</strong><br /><br />\r\n                    <button onClick={this.handleBackButton} className=\"btn btn-primary\"><span className=\"glyphicon glyphicon-arrow-left\"></span> Margeti Inapoi</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    /// componenta render a clasei\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>Introducere Sesizare Noua</h1>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-offset-2 col-md-10\">\r\n                                            <this.sesizareComponent />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SesizareProblemaNoua\r\n","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport axios from 'axios'\r\nimport ModalWindow from '../../ModalComponent/ModalWindow'\r\n\r\nclass RenderJobReparatie extends Component {\r\n\r\n    state = {\r\n        validateCount: 6,\r\n        modal_state: \"\",\r\n        modal_title: \"\",\r\n        modal_body: \"\",\r\n        serieGenerica: false,\r\n        currentSelectedSesizare: {}\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal_state: \"\",\r\n            modal_title: \"\",\r\n            modal_body: \"\"\r\n        })\r\n    }\r\n\r\n    sendEmail = (configEmail) => {\r\n        let origin = window.origin;\r\n        //console.log(\"email to send: \" + configEmail);\r\n        axios.post(origin + '/api/SendMail', configEmail)\r\n            .then(function (data) {\r\n                //console.log(data)\r\n            });\r\n    }\r\n\r\n    // async sendEmail(configEmail) {\r\n    //     //let origin = window.origin;\r\n    // await $.post('http://192.168.0.8:3030/imprimanteunicarm/backend/phpMail/SendMail.php', configEmail)\r\n    //     .done(function (data) {\r\n    //         // alert(\"Data Loaded: \" + data);\r\n    //     });\r\n    // }\r\n\r\n    formValidator = () => {\r\n        if ($(\"#repair_counter\").val() === \"\") $(\"#repair_counter\").val(0);\r\n        let msg = \"\";\r\n        let allOK = true;\r\n        for (let i = 1; i <= this.state.validateCount; i++) {\r\n            //validatefieldmsg1\r\n            //alert($('.validatefield' + i).is(\"select\"))\r\n            if ($('.validatefield' + i).is(\"select\")) {\r\n                let disabledText = $('.validatefield' + i + ' option[disabled]:selected').val();\r\n                let selectedVal = $('.validatefield' + i).find(\":selected\").val();\r\n                if (selectedVal === disabledText) {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n            } else {\r\n                if ($(\".validatefield\" + i).val().trim() === \"\") {\r\n                    let text = $(\"#validatefieldmsg\" + i).text() + \" este Obligatoriu!!!\";\r\n                    msg += \"<p> \" + text + \" </p>\";\r\n                    allOK = false;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: \"Informatii Incorecte!!!\",\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n\r\n    validatorPrinterSN = (printerSn, msg, title) => {\r\n        let allOK = true;\r\n        if (printerSn.trim() === \"\") allOK = false;\r\n        if (!allOK) {\r\n            this.setState({\r\n                ...this.state,\r\n                modal_state: \"yes\",\r\n                modal_title: title,\r\n                modal_body: msg\r\n            })\r\n        }\r\n        return allOK;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState(Object.assign({}, { ...this.state }, { ...this.props.state }));\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState(Object.assign({}, { ...this.state }, { ...this.props.state }));\r\n        //console.log(\"this.state=\", this.props.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if (e.target.id === \"repair_cost\") {\r\n            if (isNaN(e.target.value)) {\r\n                this.validatorPrinterSN(\"\", \"Doar cifre sunt admise\", \"Eroare!!!\");\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        if (e.target.id === \"repair_counter\") {\r\n            if (isNaN(e.target.value)) {\r\n                this.validatorPrinterSN(\"\", \"Doar cifre sunt admise\", \"Eroare!!!\");\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ ...props.state });\r\n        //console.log(\"prps:S\", props);\r\n    }\r\n\r\n    introducereReparatieInTabele = (reparatie) => {\r\n\r\n        //let store_name = this.state.storelist.find(item => item.store_id === adaugaSesizareInSistem.store_id).store_name;\r\n        let emailMsg = `\r\n        <br/><br/>\r\n        &nbsp;&nbsp;&nbsp;<h3>Imprimanta venita din reparatie</h3>\r\n        <br/><br/>\r\n        <table width=\"auto\" border=\"0\" cellspacing=\"3\" cellpadding=\"6\" style=\"border:1px solid #ccc;\">\r\n           <tr ><th>Creat De</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${reparatie.changed_by}</td>\r\n           </tr>\r\n           <tr ><th>Nume Magazin</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${this.state.currentSelectedSesizare.store_name} - ${this.state.currentSelectedSesizare.store_location}</td>\r\n           </tr>\r\n           <tr><th>Printer Brand</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${this.state.currentSelectedSesizare.printer_brand}</td>\r\n           </tr>\r\n           <tr><th>Printer Model</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${this.state.currentSelectedSesizare.printer_model}</td>\r\n           </tr>\r\n           <tr><th>Fosta Problema</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${this.state.currentSelectedSesizare.sesizari_log_problem} - ${this.state.currentSelectedSesizare.sesizari_log_problem_description}</td>\r\n           </tr>\r\n           <tr><th>Status Actual</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${reparatie.printer_status}</td>\r\n           </tr>   \r\n           <tr><th>Piese Montate</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${reparatie.repair_parts_fitted}</td>\r\n           </tr>  \r\n           <tr><th>Mai Multe Reparatii despre Reparatie</th>\r\n           <td style=\"border-bottom:1px solid #ccc;\">${reparatie.repair_info}</td>\r\n           </tr>           \r\n           <tr><th>Cost</th>\r\n           <td>${reparatie.repair_cost}</td>\r\n           </tr>           \r\n        </table>\r\n        <br/> <br/>\r\n        Cu respect,<br/>&nbsp;&nbsp;&nbsp;&nbsp;Sesizari Imprimante Unicarm\r\n        `;\r\n        //console.log(this.state);\r\n        console.log(reparatie);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Updates', reparatie)\r\n            .then((res) => {\r\n                //console.log(res);\r\n                try {\r\n                    const { response } = JSON.parse(res.data);\r\n                    //console.log(store_location);\r\n                    if (response.toString().startsWith(\"Record Problem\")) {\r\n                        this.props.setChildEmpty(this.state.currentSelectedSesizare, { updateReparatieResult: \"updateNotOK\" });\r\n\r\n                    }\r\n                    if (response.toString().startsWith(\"Record Updated\")) {\r\n                        this.props.setChildEmpty(this.state.currentSelectedSesizare, { updateReparatieResult: \"updateOK\" });\r\n                        let configEmail = {\r\n                            emailMsg: emailMsg,\r\n                            emailSubject: \"Reparatie Noua - \" + this.state.currentSelectedSesizare.store_name,\r\n                            emailToAddress: \"it@unicarm.ro\",\r\n                            type: \"SesizareNouaEmail\"\r\n                        }\r\n                        // console.log(this.configEmail);\r\n                        this.sendEmail(configEmail);\r\n                    }\r\n                } catch (e) {\r\n                    //console.error(e);\r\n                    this.props.setChildEmpty(this.state.currentSelectedSesizare, { updateReparatieResult: \"updateNotOK\" });\r\n                }\r\n            });\r\n    }\r\n    moment = require('moment');\r\n    handleSubmitReparatie = (e) => {\r\n        e.preventDefault();\r\n        let allOK = this.formValidator();\r\n        //console.log(allOK);\r\n\r\n        if (allOK) {\r\n            //let date = \"\" + (new Date().getFullYear()) + \"-\" + (new Date().getMonth()) + \"-\" + (new Date().getDay());\r\n\r\n            let dateandtime = this.moment().format('YYYY-MM-DD HH-mm-ss');\r\n            //date = $(\"#repair_date\").val().toString() === \"\" ? date : $(\"#repair_date\").val().toString();\r\n            let selectedObject = this.state.currentSelectedSesizare;\r\n            let repartieInfo = {\r\n                repair_parts_fitted: $(\"#repair_parts_fitted\").val(),\r\n                repair_counter: $(\"#repair_counter\").val() === \"\" ? 0 : $(\"#repair_counter\").val(),\r\n                repair_info: $(\"#repair_info\").val(),\r\n                repair_cost: $(\"#repair_cost\").val() === \"\" ? 0 : $(\"#repair_cost\").val(),\r\n                repair_date: dateandtime,\r\n                printer_status: $(\"#printer_status\").val(),\r\n                type: \"IntroducereReparatie\",\r\n                sesizari_log_id: selectedObject.sesizari_log_id,\r\n                printer_id: selectedObject.printer_id,\r\n                store_id: selectedObject.store_id,\r\n                printers_history_date: dateandtime,\r\n                changed_by: sessionStorage.getItem('user_name'),\r\n                printer_sn: typeof $(\"#printer_sn\").val() === \"undefined\" ? \"undefined\" : $(\"#printer_sn\").val()\r\n            }\r\n\r\n            this.introducereReparatieInTabele(repartieInfo);\r\n            //console.log(typeof $(\"#printer_sn\").val() === \"undefined\" ? \"undefined\" : $(\"#printer_sn\").val());\r\n        }\r\n    }\r\n\r\n    handleAlegeStatusImprimanta = (e) => {\r\n\r\n    }\r\n\r\n    StatusImprimanta = () => {\r\n        return (\r\n            <select onChange={this.handleAlegeStatusImprimanta} id=\"printer_status\" defaultValue=\"Reparata - In asteptate de utilizator\" className=\"validatefield6 browser-default\">\r\n                <option disabled >Alege Status</option>\r\n                {this.state.printer_select_options.map((item, i) => {\r\n                    return <option key={i}>{item}</option>\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    serieImprimanta = () => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label id=\"validatefieldmsg7\" className=\"text-info text-medium\" htmlFor=\"printer_sn\">*Serie Imprimanta</label>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield7 form-control\" id=\"printer_sn\" placeholder=\"Imprimanta are serie generica Intoduceti seria reala!!!\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"state=\", this.state);\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <table className=\"table table-responsive table-bordered table-striped table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sesizarea numarul</th>\r\n                                    <th>Data</th>\r\n                                    <th>Creata De</th>\r\n                                    <th>Magazin</th>\r\n                                    <th>Problema Raportata</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{this.state.currentSelectedSesizare.sesizari_log_id}</td>\r\n                                    <td>{this.state.currentSelectedSesizare.sesizari_log_date}</td>\r\n                                    <td>{this.state.currentSelectedSesizare.changed_by}</td>\r\n                                    <td>{this.state.currentSelectedSesizare.store_name} - {this.state.currentSelectedSesizare.store_location}</td>\r\n                                    <td>{this.state.currentSelectedSesizare.sesizari_log_problem + \" - \" + this.state.currentSelectedSesizare.sesizari_log_problem_description}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <form onSubmit={this.handleSubmitReparatie}>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label id=\"validatefieldmsg1\" className=\"text-info text-medium\" htmlFor=\"repair_parts_fitted\">*Piese Montate</label>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield1 form-control\" id=\"repair_parts_fitted\" placeholder=\"ex: x role, 1 printhead etc.\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.serieGenerica && <this.serieImprimanta />}\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label id=\"validatefieldmsg2\" className=\"text-info text-medium\" htmlFor=\"repair_info\">*Detaliati Reparatia</label>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield2 form-control\" id=\"repair_info\" placeholder=\"ex: Dispozitiv Resetat, curatat, schimbat piese etc. \" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label id=\"validatefieldmsg3\" className=\"text-info text-medium\" htmlFor=\"repair_cost\">*Cost Reparatie</label>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield3 form-control\" id=\"repair_cost\" placeholder=\"ex: 0 sau alta suma\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label id=\"validatefieldmsg4\" className=\"text-info text-medium\" htmlFor=\"repair_counter\">*Contor Imprimanta</label>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield4 form-control\" id=\"repair_counter\" placeholder=\"ex: 0 daca nu se stie\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label id=\"validatefieldmsg5\" className=\"text-info text-medium\" htmlFor=\"repair_date\">*Data Reparatiei</label>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input onChange={this.handleChange} type=\"text\" className=\"validatefield5 form-control\" id=\"repair_date\" placeholder=\"Introduceti o noua data cand a fost reparata imprimanta!!!\" value={this.moment().format('YYYY-MM-DD HH-mm-ss')} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label id=\"validatefieldmsg6\" className=\"text-info text-medium\" htmlFor=\"repair_date\">*Statusul Actual</label>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <this.StatusImprimanta />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <button className=\"btn\" id=\"SubmitBtn\" onSubmit={this.handleSubmitReparatie}>+ Introduce Reparatia</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {this.state.modal_state && <ModalWindow Title={this.state.modal_title} Body={this.state.modal_body} resetState={this.resetState} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RenderJobReparatie\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport $ from 'jquery'\r\nimport \"./style.css\"\r\nimport RenderJobReparatie from './RenderJobReparatie';\r\n\r\nclass IntroducereReparatie extends Component {\r\n\r\n    state = {\r\n        componentTitle: \"Introducere Reparatie\",\r\n        listaSesizari: [],\r\n        hasUserChoosenSesizare: \"\",\r\n        printer_select_options: [],\r\n        updateReparatieResult: \"\"\r\n\r\n    }\r\n\r\n    setChildEmpty = (currentSelectedSesizare, result) => {\r\n        //    / console.log(updateReparatieResult);\r\n        let listaSesizari = this.state.listaSesizari.filter(item => {\r\n            return item.printer_sn !== currentSelectedSesizare.printer_sn;\r\n        });\r\n        $('#select_sesizare').prop('selected', false).find('option:first').prop('selected', true);\r\n        this.setState({\r\n            ...this.state,\r\n            hasUserChoosenSesizare: \"\",\r\n            listaSesizari: listaSesizari,\r\n            updateReparatieResult: result.updateReparatieResult\r\n        })\r\n    }\r\n    /*\r\n        listaSesizari:[\r\n            {sesizari_log_id:\"\"},\r\n            {sesizari_log_date:\"\"},\r\n            {store_id:\"\"},\r\n            {printer_id:\"\"},\r\n            {sesizari_log_problem:\"\"},        \r\n            {sesizari_log_problem_description:\"\"},        \r\n            {changed_by:\"\"},\r\n            {printer_brand:\"\"},\r\n            {printer_model:\"\"},\r\n            {printer_sn:\"\"},\r\n            {store_name:\"\"},\r\n            {store_location:\"\"}\r\n        ]\r\n    */\r\n    componentWillMount() {\r\n        this.populateSesizari();\r\n    }\r\n    componentWillUpdate() {\r\n        //console.log(this.state.hasUserChoosenSesizare.split(\"SN: \")[1].trim());\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    populateSesizari = () => {\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', { type: \"Listare_Lista_Sesizari_Active\" })\r\n            .then((res) => {\r\n                //console.log(res);\r\n                try {\r\n                    const { response } = JSON.parse(res.data);\r\n                    //console.log(store_location);\r\n                    if (response.toString().startsWith(\"Nu_au_fost_gasite_sesizari_active\")) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            result: \"Nu_au_fost_gasite_sesizari_active\",\r\n                        })\r\n                    }\r\n                    if (response.toString().startsWith(\"Listare_Lista_Sesizari_Active\")) {\r\n                        const { listaSesizari, printer_select_options } = JSON.parse(res.data);\r\n                        this.setState({\r\n                            ...this.state,\r\n                            result: \"SesizariListaAcutualizata\",\r\n                            listaSesizari: listaSesizari,\r\n                            printer_select_options: printer_select_options\r\n                        });\r\n                        //console.log(this.state);\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                }\r\n            });\r\n    }\r\n\r\n    // populare state cu sesizari active\r\n    handleAlegeSesizareSelect = (e) => {\r\n        let obj = this.state.listaSesizari.find(item => {\r\n            return item.printer_sn === e.target.value.split(\"SN: \")[1].trim();\r\n        });\r\n        if (e.target.value.split(\"SN: \")[1].trim().startsWith(\"genericSNstoreid\")) {\r\n            this.setState({\r\n                ...this.state,\r\n                updateReparatieResult: \"\",\r\n                hasUserChoosenSesizare: e.target.value,\r\n                serieGenerica: true,\r\n                validateCount: 7,\r\n                currentSelectedSesizare: obj\r\n            });\r\n\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                updateReparatieResult: \"\",\r\n                hasUserChoosenSesizare: e.target.value,\r\n                serieGenerica: false,\r\n                validateCount: 6,\r\n                currentSelectedSesizare: obj\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    selectareSesizare = () => {\r\n        this.updateReparatieResult = \"\";\r\n        return (\r\n            <select onChange={this.handleAlegeSesizareSelect} id=\"select_sesizare\" defaultValue=\"Alege o sesizare\" className=\"browser-default\">\r\n                <option disabled >Alege o sesizare</option>\r\n                {this.state.listaSesizari.map((item, i) => {\r\n                    return <option key={i}>{item['store_name'] + \" - { \" + item['printer_brand'] + \" - \" + item['printer_model'] + \" } - SN: \" + item['printer_sn']}</option>\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    mainComponent = () => {\r\n        //console.log(\"main:\", this.state.updateReparatieResult);\r\n        if (this.state.updateReparatieResult === \"\" || typeof this.state.updateReparatieResult === \"undefined\") {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <this.selectareSesizare />\r\n                            {this.state.hasUserChoosenSesizare && <RenderJobReparatie setChildEmpty={this.setChildEmpty} state={Object.assign({}, { ...this.state })} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.updateReparatieResult === \"updateOK\") {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <this.selectareSesizare /><br />\r\n                            <div className=\"alert alert-success\">\r\n                                <strong >Reparatie efectuata cu Success</strong><br /><br />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.updateReparatieResult === \"updateNotOK\") {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <this.selectareSesizare /><br />\r\n                            <div className=\"alert alert-success\">\r\n                                <strong >Reparatie efectuata cu Success</strong><br /><br />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\">\r\n                            <div className=\"col-centered\"><br />\r\n                                <h1>{this.state.componentTitle}</h1>\r\n                                <this.mainComponent />\r\n\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IntroducereReparatie\r\n","import React from 'react'\r\n\r\nconst RenderComponent = (props) => {\r\n\r\n    return (\r\n        <tr id={\"tdParent\" + props.index}>\r\n            {props.sqlTableFildsList.map((indexitem, index) => {\r\n                return <td id={props.index} key={index}>{props.item[indexitem]}</td>\r\n            })}\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default RenderComponent\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport RenderComponent from './RenderComponent'\r\nimport $ from 'jquery'\r\n/*\r\nselect for getting trace where printers have been to\r\nSELECT (select printer_brand from printers where printer_id=prnHi.printer_id) printer_brand, (select printer_model from printers where printer_id=prnHi.printer_id) printer_model, (select printer_sn from printers where printer_id=prnHi.printer_id) printer_sn, (select store_name from store_info where store_id=prnHi.store_id) store_name,printers_history_date,printers_history_notes FROM printers_history prnHi order by printer_id\r\n\r\n\r\n\r\n\r\n*/\r\nclass RenderTableView extends Component {\r\n\r\n    state = {\r\n        type: \"\",\r\n        viewTableFildsList: [],\r\n        sqlTableFildsList: [],\r\n        sqlcommand: \"\",\r\n        storelist: []\r\n    }\r\n\r\n    getTableRequestedData = () => {\r\n        const newObj = Object.assign({}, { ...this.props.state });\r\n        //console.log(newObj);\r\n        this.setState(newObj);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    // console.log(res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"NoItemsInTheList\") {\r\n                        $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                    }\r\n\r\n                    if (response === \"ok\") {\r\n                        $(\"#EmptySpan\").addClass(\"hidden\");\r\n                        let { storelist } = JSON.parse(res.data);\r\n                        //console.log(\"rerequest\");\r\n                        const newObjj = Object.assign({}, { ...this.state }, { storelist: [...storelist] });\r\n                        this.setState(newObjj);\r\n                        //console.log(\"json\", newObjj);\r\n                    }\r\n                } catch (e) {\r\n                    $(\"#EmptySpan\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#EmptySpan\").addClass(\"bg-red\");\r\n                    $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                }\r\n            });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getTableRequestedData();\r\n\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    returnTableHeader = this.props.state.viewTableFildsList.map((item, index) => {\r\n        return <th key={index}>{item}</th>;\r\n    })\r\n\r\n    returnTableBody = this.state.storelist.map((item, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <th>{item[this.state.sqlTableFildsList[0]]}</th>\r\n                <th>{item[this.state.sqlTableFildsList[1]]}</th>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    handleClick = (e) => {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    convertToCSV = () => {\r\n        let array = \"[{\";\r\n        for (let j = 0; j < this.state.sqlTableFildsList.length; j++) {\r\n            let list = this.state.sqlTableFildsList[j];\r\n            //console.log(list);\r\n            array += JSON.stringify(list) + \":\" + JSON.stringify(list) + \",\";\r\n        }\r\n        array = array.substring(0, array.length - 1);\r\n        array = array + \"}]\";\r\n        array = [...JSON.parse(array), ...this.state.storelist];\r\n        let csv = array.map(function (d) {\r\n            return JSON.stringify(Object.values(d));\r\n        })\r\n            .join('\\n')\r\n            .replace(/(^\\[)|(\\]$)/mg, '');\r\n        let a = document.createElement(\"a\");\r\n        a.href = 'data:attachment/csv,' + csv;\r\n        a.target = \"_Blank\";\r\n        a.download = this.props.state.componentTitle.replace(/(^\\[)|(\\]$)/mg, '') + \".csv\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>{this.props.state.componentTitle}</h1>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <table className=\"table table-responsive table-bordered table-striped table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                {this.state.viewTableFildsList.length !== 0 && this.returnTableHeader}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.storelist.length !== 0 && this.state.storelist.map((item, index) => {\r\n                                                    return <RenderComponent key={index} index={index} item={item} sqlTableFildsList={this.props.state.sqlTableFildsList} />\r\n                                                })\r\n                                            }\r\n                                            <tr><td id=\"EmptySpan\" className=\"info\" colSpan={this.state.viewTableFildsList.length}>Empty</td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button onClick={this.convertToCSV} id=\"downloadCSV\" className=\"btn btn-primary\">Print To CSV</button>\r\n                                </form>\r\n\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RenderTableView\r\n","import React, { Component } from 'react'\r\nimport RenderTableView from '../../administrare/componenteTemplate/componentaVizualizareGenerala/RenderTableView'\r\n\r\nclass PretReparatiiImprimante extends Component {\r\n    state = {\r\n        type: \"General_Listing\",\r\n        viewTableFildsList: [\"Brand\", \"Model\", \"Serie\", \"Total Cost Reparatie\", \"Pret Lista\"],\r\n        sqlTableFildsList: [\"printer_brand\", \"printer_model\", \"printer_sn\", \"repair_cost\", \"printer_list_price\"],\r\n        sqlcommand: \"SELECT printer_brand,printer_model,printer_sn,IFNUll((select SUM(repair_cost) from printers_repairs_log WHERE printer_id=prn.printer_id),0) repair_cost,IFNUll(printer_list_price,0) printer_list_price from printers prn order by repair_cost desc\",\r\n        storelist: [],\r\n        componentTitle: \"Pret Reparatii / Imprimante\",\r\n        table_name: \"printers\",\r\n        deleteListIndexBy: \"printer_sn\",\r\n        response: \"\"\r\n    }\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n\r\n        if (sessionStorage.getItem('role') !== \"admin\" && sessionStorage.getItem('role') !== \"store\" && sessionStorage.getItem('role') !== \"storeraport\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RenderTableView state={this.state} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PretReparatiiImprimante\r\n","import React, { Component } from 'react'\r\nimport RenderTableView from '../../administrare/componenteTemplate/componentaVizualizareGenerala/RenderTableView'\r\n\r\nclass PretReparatiiMagazin extends Component {\r\n    state = {\r\n        type: \"General_Listing\",\r\n        viewTableFildsList: [\"Nume Magazin\", \"Locatie Magazin\", \"Total Cost Reparatii Imprimante\"],\r\n        sqlTableFildsList: [\"store_name\", \"store_location\", \"repair_cost\"],\r\n        sqlcommand: \"select store_name , store_location, IFNULL((select sum(repair_cost) from printers_repairs_log where store_id=st_info.store_id),0) repair_cost from store_info st_info order by repair_cost desc\",\r\n        storelist: [],\r\n        componentTitle: \"Pret Reparatii / Magazin\",\r\n        table_name: \"printers\",\r\n        deleteListIndexBy: \"printer_sn\",\r\n        response: \"\"\r\n    }\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n\r\n        if (sessionStorage.getItem('role') !== \"admin\" && sessionStorage.getItem('role') !== \"store\" && sessionStorage.getItem('role') !== \"storeraport\")\r\n            this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RenderTableView state={this.state} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PretReparatiiMagazin\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport RenderComponent from '../../../administrare/componenteTemplate/componentaVizualizareGenerala/RenderComponent'\r\nimport $ from 'jquery'\r\n/*\r\nselect for getting trace where printers have been to\r\nSELECT (select printer_brand from printers where printer_id=prnHi.printer_id) printer_brand, (select printer_model from printers where printer_id=prnHi.printer_id) printer_model, (select printer_sn from printers where printer_id=prnHi.printer_id) printer_sn, (select store_name from store_info where store_id=prnHi.store_id) store_name,printers_history_date,printers_history_notes FROM printers_history prnHi order by printer_id\r\n\r\n*/\r\nclass ComponentaVizualizarePerSelectMagazine extends Component {\r\n\r\n    state = {\r\n        type: \"\",\r\n        viewTableFildsList: [],\r\n        sqlTableFildsList: [],\r\n        sqlcommand: \"\",\r\n        storelist: [],\r\n        storelistNameID: []\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    getTableRequestedData = (nextProps) => {\r\n        const newObj = Object.assign({}, { ...nextProps.state });\r\n        //console.log(newObj.sqlcommand);\r\n        //this.setState(nextProps.state);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    //console.log(\"res=\", res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"NoItemsInTheList\") {\r\n                        $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                        const newObjj = Object.assign({}, { ...nextProps.state }, { storelist: [] });\r\n                        //console.log(newObjj);\r\n                        this.setState(newObjj);\r\n                    }\r\n\r\n                    if (response === \"ok\") {\r\n                        $(\"#EmptySpan\").addClass(\"hidden\");\r\n                        let { storelist } = JSON.parse(res.data);\r\n                        //console.log(\"rerequest\");\r\n                        const newObjj = Object.assign({}, { ...nextProps.state }, { storelist: [...storelist] });\r\n                        //console.log(newObjj);\r\n                        this.setState(newObjj);\r\n                        //console.log(\"json\", newObjj);\r\n                    }\r\n                } catch (e) {\r\n                    $(\"#EmptySpan\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#EmptySpan\").addClass(\"bg-red\");\r\n                    $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    returnTableBody = () => {\r\n        this.state.storelist.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th>{item[this.state.sqlTableFildsList[0]]}</th>\r\n                    <th>{item[this.state.sqlTableFildsList[1]]}</th>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    convertToCSV = () => {\r\n        let array = \"[{\";\r\n        for (let j = 0; j < this.state.sqlTableFildsList.length; j++) {\r\n            let list = this.state.sqlTableFildsList[j];\r\n            //console.log(list);\r\n            array += JSON.stringify(list) + \":\" + JSON.stringify(list) + \",\";\r\n        }\r\n        array = array.substring(0, array.length - 1);\r\n        array = array + \"}]\";\r\n        array = [...JSON.parse(array), ...this.state.storelist];\r\n        let csv = array.map(function (d) {\r\n            return JSON.stringify(Object.values(d));\r\n        })\r\n            .join('\\n')\r\n            .replace(/(^\\[)|(\\]$)/mg, '');\r\n        let a = document.createElement(\"a\");\r\n        a.href = 'data:attachment/csv,' + csv;\r\n        a.target = \"_Blank\";\r\n        a.download = this.props.state.componentTitle.replace(/(^\\[)|(\\]$)/mg, '') + \".csv\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log(nextProps);\r\n        if (nextProps.sqlcommand !== \"\") this.getTableRequestedData(nextProps);\r\n    }\r\n\r\n    selectareSesizare = () => {\r\n        this.updateReparatieResult = \"\";\r\n        return (\r\n            <select onChange={this.props.handleAlegeMagazinSelect} id=\"select_sesizare\" defaultValue=\"Alege Un Magazin\" className=\"browser-default\">\r\n                <option disabled >Alege Un Magazin</option>\r\n                {this.props.state.storelistNameID.map((item, i) => {\r\n                    return <option key={i}>{item[\"store_name\"]}</option>\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"render comp\", this.state);\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>{this.props.state.componentTitle}</h1>\r\n                                <div className=\"row\">\r\n                                    <this.selectareSesizare />\r\n                                </div>\r\n\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <table className=\"table table-responsive table-bordered table-striped table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                {this.state.viewTableFildsList.length !== 0 && this.state.viewTableFildsList.map((item, index) => {\r\n                                                    return <th key={index}>{item}</th>;\r\n                                                })}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.storelist.length !== 0 && this.state.storelist.map((item, index) => {\r\n                                                    return <RenderComponent key={index} index={index} item={item} sqlTableFildsList={this.props.state.sqlTableFildsList} />\r\n                                                })\r\n                                            }\r\n                                            <tr><td id=\"EmptySpan\" className=\"info\" colSpan={this.state.viewTableFildsList.length}>Empty</td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button onClick={this.convertToCSV} id=\"downloadCSV\" className=\"btn btn-primary\">Print To CSV</button>\r\n                                </form>\r\n\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComponentaVizualizarePerSelectMagazine\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport $ from 'jquery'\r\nimport ComponentaVizualizarePerSelectMagazine from './ComponentaVizualizarePerSelectMagazine/ComponentaVizualizarePerSelectMagazine'\r\n\r\nclass VizualizareIstorieImprimanteMagazin extends Component {\r\n    state = {\r\n        storelist: [],\r\n        type: \"General_Listing\",\r\n        componentTitle: \"Vizualizare Istorie Imprimante / Magazin\",\r\n        storelistNameID: [],\r\n        response: \"\"\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n\r\n        if (sessionStorage.getItem('role') !== \"admin\" && sessionStorage.getItem('role') !== \"store\" && sessionStorage.getItem('role') !== \"storeraport\")\r\n            this.props.history.push('/');\r\n\r\n        this.getStoreList();\r\n    }\r\n\r\n    handleAlegeMagazinSelect = (e) => {\r\n        let storeInfo = this.state.storelistNameID.find(item => item.store_name === e.target.value);\r\n\r\n        //console.log(storeInfo);\r\n        this.setState({\r\n            viewTableFildsList: [\"Data\", \"Brand Imprimanta\", \"Model Imprimanta\", \"Serie Imprimanta\", \"Notite Imprimanta\"],\r\n            sqlTableFildsList: [\"printers_history_date\", \"printer_brand\", \"printer_model\", \"printer_sn\", \"printers_history_notes\"],\r\n            sqlcommand: \"select prn_his.printers_history_date,prn.printer_brand, prn.printer_model, prn.printer_sn,prn_his.printers_history_notes from printers_history prn_his, printers prn where prn_his.store_id='\" + storeInfo.store_id + \"' and prn.printer_id=prn_his.printer_id order by prn_his.printers_history_date DESC\",\r\n            table_name: \"printers\",\r\n        });\r\n    }\r\n\r\n\r\n    getStoreList = () => {\r\n        const newObj = Object.assign({}, { payload: \"NONE\" }, { type: \"Listare_Magazine\" });\r\n\r\n        if (this.state.storelist.length === 0) {\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Listare', newObj)\r\n                .then((res) => {\r\n                    //console.log(res)\r\n                    try {\r\n                        const { response, store_location } = JSON.parse(res.data);\r\n                        //console.log(store_location);\r\n                        if (response === \"StoreLocationSugestion\") {\r\n                            this.setState({ ...this.state, storelistNameID: [...store_location] });\r\n                        }\r\n\r\n                        // console.log(\"axios\", self.state);\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n            var today = new Date();\r\n            this.setState({\r\n                ...this.state,\r\n                date: today\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        return (\r\n            <div>\r\n                {this.state.storelistNameID.length !== 0 && <ComponentaVizualizarePerSelectMagazine state={this.state} handleAlegeMagazinSelect={this.handleAlegeMagazinSelect} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VizualizareIstorieImprimanteMagazin\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport RenderComponent from '../../../administrare/componenteTemplate/componentaVizualizareGenerala/RenderComponent'\r\nimport $ from 'jquery'\r\n/*\r\nselect for getting trace where printers have been to\r\nSELECT (select printer_brand from printers where printer_id=prnHi.printer_id) printer_brand, (select printer_model from printers where printer_id=prnHi.printer_id) printer_model, (select printer_sn from printers where printer_id=prnHi.printer_id) printer_sn, (select store_name from store_info where store_id=prnHi.store_id) store_name,printers_history_date,printers_history_notes FROM printers_history prnHi order by printer_id\r\n\r\n*/\r\nclass ComponentaVizualizarePerSelectImprimante extends Component {\r\n\r\n    state = {\r\n        type: \"\",\r\n        viewTableFildsList: [],\r\n        sqlTableFildsList: [],\r\n        sqlcommand: \"\",\r\n        storelist: [],\r\n        printerlistNameID: []\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    getTableRequestedData = (nextProps) => {\r\n        const newObj = Object.assign({}, { ...nextProps.state });\r\n        //console.log(newObj.sqlcommand);\r\n        //this.setState(nextProps.state);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    //console.log(\"res=\", res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"NoItemsInTheList\") {\r\n                        $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                        const newObjj = Object.assign({}, { ...nextProps.state }, { storelist: [] });\r\n                        //console.log(newObjj);\r\n                        this.setState(newObjj);\r\n                    }\r\n\r\n                    if (response === \"ok\") {\r\n                        $(\"#EmptySpan\").addClass(\"hidden\");\r\n                        let { storelist } = JSON.parse(res.data);\r\n                        //console.log(\"rerequest\");\r\n                        const newObjj = Object.assign({}, { ...nextProps.state }, { storelist: [...storelist] });\r\n                        //console.log(newObjj);\r\n                        this.setState(newObjj);\r\n                        //console.log(\"json\", newObjj);\r\n                    }\r\n                } catch (e) {\r\n                    $(\"#EmptySpan\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#EmptySpan\").addClass(\"bg-red\");\r\n                    $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    returnTableBody = () => {\r\n        this.state.storelist.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th>{item[this.state.sqlTableFildsList[0]]}</th>\r\n                    <th>{item[this.state.sqlTableFildsList[1]]}</th>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    convertToCSV = () => {\r\n        let array = \"[{\";\r\n        for (let j = 0; j < this.state.sqlTableFildsList.length; j++) {\r\n            let list = this.state.sqlTableFildsList[j];\r\n            //console.log(list);\r\n            array += JSON.stringify(list) + \":\" + JSON.stringify(list) + \",\";\r\n        }\r\n        array = array.substring(0, array.length - 1);\r\n        array = array + \"}]\";\r\n        array = [...JSON.parse(array), ...this.state.storelist];\r\n        let csv = array.map(function (d) {\r\n            return JSON.stringify(Object.values(d));\r\n        })\r\n            .join('\\n')\r\n            .replace(/(^\\[)|(\\]$)/mg, '');\r\n        let a = document.createElement(\"a\");\r\n        a.href = 'data:attachment/csv,' + csv;\r\n        a.target = \"_Blank\";\r\n        a.download = this.props.state.componentTitle.replace(/(^\\[)|(\\]$)/mg, '') + \".csv\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log(nextProps);\r\n        if (nextProps.sqlcommand !== \"\") this.getTableRequestedData(nextProps);\r\n    }\r\n\r\n    selectareSesizare = () => {\r\n        this.updateReparatieResult = \"\";\r\n        return (\r\n            <select onChange={this.props.handleAlegeImprimantaSelect} id=\"select_sesizare\" defaultValue=\"Alege o Imprimanta\" className=\"browser-default\">\r\n                <option disabled >Alege o Imprimanta</option>\r\n                {this.props.state.printerlistNameID.map((item, i) => {\r\n                    return <option id={item[\"printer_id\"]} key={i}>{item[\"printer_sn\"] + \" - \" + item[\"printer_brand\"] + \" - \" + item[\"printer_model\"]}</option>\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"render comp\", this.state);\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>{this.props.state.componentTitle}</h1>\r\n                                <div className=\"row\">\r\n                                    <this.selectareSesizare />\r\n                                </div>\r\n\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <table className=\"table table-responsive table-bordered table-striped table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                {this.state.viewTableFildsList.length !== 0 && this.state.viewTableFildsList.map((item, index) => {\r\n                                                    return <th key={index}>{item}</th>;\r\n                                                })}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.storelist.length !== 0 && this.state.storelist.map((item, index) => {\r\n                                                    return <RenderComponent key={index} index={index} item={item} sqlTableFildsList={this.props.state.sqlTableFildsList} />\r\n                                                })\r\n                                            }\r\n                                            <tr><td id=\"EmptySpan\" className=\"info\" colSpan={this.state.viewTableFildsList.length}>Empty</td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button onClick={this.convertToCSV} id=\"downloadCSV\" className=\"btn btn-primary\">Print To CSV</button>\r\n                                </form>\r\n\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComponentaVizualizarePerSelectImprimante\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport $ from 'jquery'\r\nimport ComponentaVizualizarePerSelectImprimante from './ComponentaVizualizarePerSelectImprimante/ComponentaVizualizarePerSelectMagazine'\r\n\r\nclass VizualizareIstorieImprimante extends Component {\r\n    state = {\r\n        storelist: [],\r\n        type: \"General_Listing\",\r\n        componentTitle: \"Vizualizare Istorie Imprimante\",\r\n        printerlistNameID: [],\r\n        response: \"\"\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n\r\n        if (sessionStorage.getItem('role') !== \"admin\" && sessionStorage.getItem('role') !== \"store\" && sessionStorage.getItem('role') !== \"storeraport\")\r\n            this.props.history.push('/');\r\n\r\n        this.getPrinterList();\r\n    }\r\n\r\n    handleAlegeImprimantaSelect = (e) => {\r\n        let prin_id = $(\"#select_sesizare\").find('option:selected').attr('id');\r\n\r\n        //console.log();\r\n        this.setState({\r\n            viewTableFildsList: [\"Data\", \"Magazin\", \"Brand Imprimanta\", \"Model Imprimanta\", \"Serie Imprimanta\", \"Notite Imprimanta\"],\r\n            sqlTableFildsList: [\"printers_history_date\", \"store_name\", \"printer_brand\", \"printer_model\", \"printer_sn\", \"printers_history_notes\"],\r\n            sqlcommand: \"select prn_his.printers_history_date,stor.store_name,prn.printer_brand, prn.printer_model, prn.printer_sn,prn_his.printers_history_notes from printers_history prn_his, printers prn,store_info stor where prn_his.printer_id=prn.printer_id and prn_his.printer_id=\" + prin_id + \" and stor.store_id=prn_his.store_id order by prn_his.printers_history_date DESC\",\r\n            table_name: \"printers\",\r\n        });\r\n    }\r\n\r\n\r\n    getPrinterList = () => {\r\n        const newObj = Object.assign({}, { payload: \"NONE\" }, { type: \"Listare_Imprimante\" });\r\n\r\n        if (this.state.storelist.length === 0) {\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Listare', newObj)\r\n                .then((res) => {\r\n                    //console.log(res)\r\n                    try {\r\n                        const { response, printer_list } = JSON.parse(res.data);\r\n                        //console.log(store_location);\r\n                        if (response === \"StoreLocationSugestion\") {\r\n                            this.setState({ ...this.state, printerlistNameID: [...printer_list] });\r\n                        }\r\n\r\n                        // console.log(\"axios\", printer_list);\r\n                    } catch (e) {\r\n                        //console.error(e);\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n            var today = new Date();\r\n            this.setState({\r\n                ...this.state,\r\n                date: today\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        return (\r\n            <div>\r\n                {this.state.printerlistNameID.length !== 0 && <ComponentaVizualizarePerSelectImprimante state={this.state} handleAlegeImprimantaSelect={this.handleAlegeImprimantaSelect} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VizualizareIstorieImprimante\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport RenderComponent from '../../../administrare/componenteTemplate/componentaVizualizareGenerala/RenderComponent'\r\nimport $ from 'jquery'\r\n/*\r\nselect for getting trace where printers have been to\r\nSELECT (select printer_brand from printers where printer_id=prnHi.printer_id) printer_brand, (select printer_model from printers where printer_id=prnHi.printer_id) printer_model, (select printer_sn from printers where printer_id=prnHi.printer_id) printer_sn, (select store_name from store_info where store_id=prnHi.store_id) store_name,printers_history_date,printers_history_notes FROM printers_history prnHi order by printer_id\r\n\r\n*/\r\nclass ComponentaVizualizarePerSelectImprimante extends Component {\r\n\r\n    state = {\r\n        type: \"\",\r\n        viewTableFildsList: [],\r\n        sqlTableFildsList: [],\r\n        sqlcommand: \"\",\r\n        storelist: [],\r\n        printerlistNameID: []\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    getTableRequestedData = (nextProps) => {\r\n        const newObj = Object.assign({}, { ...nextProps.state });\r\n        //console.log(newObj.sqlcommand);\r\n        //this.setState(nextProps.state);\r\n        let origin = window.origin;\r\n        axios.post(origin + '/api/Listare', newObj)\r\n            .then((res) => {\r\n                try {\r\n                    //console.log(\"res=\", res);\r\n                    let { response } = JSON.parse(res.data);\r\n                    //console.log(response);\r\n                    if (response === \"NoItemsInTheList\") {\r\n                        $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                        const newObjj = Object.assign({}, { ...nextProps.state }, { storelist: [] });\r\n                        //console.log(newObjj);\r\n                        this.setState(newObjj);\r\n                    }\r\n\r\n                    if (response === \"ok\") {\r\n                        $(\"#EmptySpan\").addClass(\"hidden\");\r\n                        let { storelist } = JSON.parse(res.data);\r\n                        //console.log(\"rerequest\");\r\n                        const newObjj = Object.assign({}, { ...nextProps.state }, { storelist: [...storelist] });\r\n                        //console.log(newObjj);\r\n                        this.setState(newObjj);\r\n                        //console.log(\"json\", newObjj);\r\n                    }\r\n                } catch (e) {\r\n                    $(\"#EmptySpan\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                    $(\"#EmptySpan\").addClass(\"bg-red\");\r\n                    $(\"#EmptySpan\").removeClass(\"hidden\");\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    returnTableBody = () => {\r\n        this.state.storelist.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th>{item[this.state.sqlTableFildsList[0]]}</th>\r\n                    <th>{item[this.state.sqlTableFildsList[1]]}</th>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    convertToCSV = () => {\r\n        let array = \"[{\";\r\n        for (let j = 0; j < this.state.sqlTableFildsList.length; j++) {\r\n            let list = this.state.sqlTableFildsList[j];\r\n            //console.log(list);\r\n            array += JSON.stringify(list) + \":\" + JSON.stringify(list) + \",\";\r\n        }\r\n        array = array.substring(0, array.length - 1);\r\n        array = array + \"}]\";\r\n        array = [...JSON.parse(array), ...this.state.storelist];\r\n        let csv = array.map(function (d) {\r\n            return JSON.stringify(Object.values(d));\r\n        })\r\n            .join('\\n')\r\n            .replace(/(^\\[)|(\\]$)/mg, '');\r\n        let a = document.createElement(\"a\");\r\n        a.href = 'data:attachment/csv,' + csv;\r\n        a.target = \"_Blank\";\r\n        a.download = this.props.state.componentTitle.replace(/(^\\[)|(\\]$)/mg, '') + \".csv\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log(nextProps);\r\n        if (nextProps.sqlcommand !== \"\") this.getTableRequestedData(nextProps);\r\n    }\r\n\r\n    selectareSesizare = () => {\r\n        this.updateReparatieResult = \"\";\r\n        return (\r\n            <select onChange={this.props.handleAlegeImprimantaSelect} id=\"select_sesizare\" defaultValue=\"Alege o Imprimanta\" className=\"browser-default\">\r\n                <option disabled >Alege o Imprimanta</option>\r\n                {this.props.state.printerlistNameID.map((item, i) => {\r\n                    return <option id={item[\"printer_id\"]} key={i}>{item[\"printer_sn\"] + \" - \" + item[\"printer_brand\"] + \" - \" + item[\"printer_model\"]}</option>\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"render comp\", this.state);\r\n        return (\r\n            <div className=\"container-fluid\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 \">\r\n                        <div className=\"jumbotron\"><br />\r\n                            <div className=\"col-centered\">\r\n                                <h1>{this.props.state.componentTitle}</h1>\r\n                                <div className=\"row\">\r\n                                    <this.selectareSesizare />\r\n                                </div>\r\n\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <table className=\"table table-responsive table-bordered table-striped table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                {this.state.viewTableFildsList.length !== 0 && this.state.viewTableFildsList.map((item, index) => {\r\n                                                    return <th key={index}>{item}</th>;\r\n                                                })}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.storelist.length !== 0 && this.state.storelist.map((item, index) => {\r\n                                                    return <RenderComponent key={index} index={index} item={item} sqlTableFildsList={this.props.state.sqlTableFildsList} />\r\n                                                })\r\n                                            }\r\n                                            <tr><td id=\"EmptySpan\" className=\"info\" colSpan={this.state.viewTableFildsList.length}>Empty</td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button onClick={this.convertToCSV} id=\"downloadCSV\" className=\"btn btn-primary\">Print To CSV</button>\r\n                                </form>\r\n\r\n                            </div>\r\n                            <br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComponentaVizualizarePerSelectImprimante\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport $ from 'jquery'\r\nimport ComponentaVizualizarePerSelectImprimante from './ComponentaVizualizarePerSelectImprimante/ComponentaVizualizarePerSelectMagazine'\r\n\r\nclass VizualizareReparatiiImprimanta extends Component {\r\n    state = {\r\n        storelist: [],\r\n        type: \"General_Listing\",\r\n        componentTitle: \"Vizualizare Reparatii / Imprimanta\",\r\n        printerlistNameID: [],\r\n        response: \"\"\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('user_name') === \"\" && sessionStorage.getItem('token') === \"\")\r\n            this.props.history.push('/');\r\n\r\n        if (sessionStorage.getItem('role') !== \"admin\" && sessionStorage.getItem('role') !== \"store\" && sessionStorage.getItem('role') !== \"storeraport\")\r\n            this.props.history.push('/');\r\n\r\n        this.getPrinterList();\r\n    }\r\n\r\n    handleAlegeImprimantaSelect = (e) => {\r\n        let prin_id = $(\"#select_sesizare\").find('option:selected').attr('id');\r\n\r\n        //console.log();\r\n        this.setState({\r\n            viewTableFildsList: [\"Data Reparatie\", \"Magazin\", \"Contor Imprimanta\", \"Piese Montate\", \"Info Reparatie\", \"Cost Reparatie\"],\r\n            sqlTableFildsList: [\"repair_date\", \"store_name\", \"repair_counter\", \"repair_parts_fitted\", \"repair_info\", \"repair_cost\"],\r\n            sqlcommand: \"select prn_rep_log.repair_date,str.store_name, prn_rep_log.repair_counter, prn_rep_log.repair_parts_fitted, prn_rep_log.repair_cost,prn_rep_log.repair_info from printers_repairs_log prn_rep_log, store_info str where printer_id=\" + prin_id + \" and str.store_id=prn_rep_log.store_id ORDER by prn_rep_log.repair_date desc\",\r\n            table_name: \"printers\",\r\n        });\r\n    }\r\n\r\n\r\n    getPrinterList = () => {\r\n        const newObj = Object.assign({}, { payload: \"NONE\" }, { type: \"Listare_Imprimante\" });\r\n\r\n        if (this.state.storelist.length === 0) {\r\n            let origin = window.origin;\r\n            axios.post(origin + '/api/Listare', newObj)\r\n                .then((res) => {\r\n                    //console.log(res)\r\n                    try {\r\n                        const { response, printer_list } = JSON.parse(res.data);\r\n                        //console.log(store_location);\r\n                        if (response === \"StoreLocationSugestion\") {\r\n                            this.setState({ ...this.state, printerlistNameID: [...printer_list] });\r\n                        }\r\n\r\n                        //console.log(\"axios\", printer_list);\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        $(\"#submitBtnRecord\").text(\"Conexiune cu baza de date Inexistenta!!\");\r\n                        $(\"#submitBtnRecord\").addClass(\"bg-red\");\r\n                    }\r\n                });\r\n            var today = new Date();\r\n            this.setState({\r\n                ...this.state,\r\n                date: today\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        return (\r\n            <div>\r\n                {this.state.printerlistNameID.length !== 0 && <ComponentaVizualizarePerSelectImprimante state={this.state} handleAlegeImprimantaSelect={this.handleAlegeImprimantaSelect} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VizualizareReparatiiImprimanta\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n// import Home from './components/Home.jsx'\nimport NavBar from './components/administrare/NavBar/NavBar'\nimport Login from './components/administrare/componenteNavBar/Login/login'\nimport IntroducereMagazinNou from './components/administrare/componenteNavBar/IntroducereMagazinNou/IntroducereMagazinNou'\nimport VizualizareListareMagazine from './components/administrare/componenteNavBar/vizualizarelistaremagazine/VizualizareListareMagazine'\nimport IntroducereImprimantaNoua from './components/administrare/componenteNavBar/IntroducereImprimantaNoua/IntroducereImprimantaNoua'\nimport './materialize.css'\nimport IntroducereUserNou from './components/administrare/componenteNavBar/IntroducereUserNou/IntroducereUserNou'\nimport VizualizareListareImprimante from './components/administrare/componenteNavBar/VizualizareListareImprimante/VizualizareListareImprimante'\nimport VizualizareListareUseri from './components/administrare/componenteNavBar/VizualizareListareUseri/VizualizareListareUseri'\nimport UpdatareInformatii from './components/administrare/componenteNavBar/UpdatareInformatii/UpdatareInformatii'\nimport SesizareProblemaNoua from './components/ProblemeImprimante/SesizareProblemaNoua/SesizareProblemaNoua'\nimport IntroducereReparatie from './components/administrare/componenteNavBar/IntroducereReparatie/IntroducereReparatie'\nimport PretReparatiiImprimante from './components/Rapoarte/PretReparatiiImprimante/PretReparatiiImprimante'\nimport PretReparatiiMagazin from './components/Rapoarte/PretReparatiiMagazin/PretReparatiiMagazin'\nimport VizualizareIstorieImprimanteMagazin from './components/Rapoarte/VizualizareIstorieImprimanteMagazin/VizualizareImprimanteMagazin'\nimport VizualizareIstorieImprimante from './components/Rapoarte/VizualizareIstorieImprimante/VizualizareIstorieImprimante'\nimport VizualizareReparatiiImprimanta from './components/Rapoarte/VizualizareReparatiiImprimanta/VizualizareReparatiiImprimanta'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/IntroducereMagazinNou\" component={IntroducereMagazinNou} />\n            <Route path=\"/VizualizareListareMagazine\" component={VizualizareListareMagazine} />\n            <Route path=\"/IntroducereUserNou\" component={IntroducereUserNou} />\n            <Route exact path=\"/Login\" component={Login} />\n            <Route path=\"/IntroducereImprimantaNoua\" component={IntroducereImprimantaNoua} />\n            <Route path=\"/VizualizareListareUseri\" component={VizualizareListareUseri} />\n            <Route path=\"/VizualizareListareImprimante\" component={VizualizareListareImprimante} />\n            <Route path=\"/UpdatareInformatii\" component={UpdatareInformatii} />\n            <Route path=\"/IntroducereReparatie\" component={IntroducereReparatie} />\n            <Route path=\"/SesizareProblemaNoua\" component={SesizareProblemaNoua} />\n            <Route path=\"/PretReparatiiImprimante\" component={PretReparatiiImprimante} />\n            <Route path=\"/PretReparatiiMagazin\" component={PretReparatiiMagazin} />\n            <Route path=\"/VizualizareIstorieImprimanteMagazin\" component={VizualizareIstorieImprimanteMagazin} />\n            <Route path=\"/VizualizareIstorieImprimante\" component={VizualizareIstorieImprimante} />\n            <Route path=\"/VizualizareReparatiiImprimanta\" component={VizualizareReparatiiImprimanta} />\n            {/* <Route path=\"/:post_id\" component={Projects} /> */}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","const initState = {\r\n    credentials: {\r\n        username: \"\", token: \"\", role: \"\"\r\n    }\r\n}\r\n\r\nfunction collectAuthFromSession(state) {\r\n    let token = sessionStorage.getItem('token');\r\n    let role = sessionStorage.getItem('role');\r\n    let username = sessionStorage.getItem('user_name');\r\n    if (token && role && username) {\r\n        const newObject = Object.assign({}, state,\r\n            { credentials: { 'username': username, 'role': role, 'token': token } });\r\n        //console.log(\"newobj\", newObject);\r\n        return newObject;\r\n    } else return state;\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    if (action.type === \"userauth\") {\r\n        let newState = Object.assign({}, { credentials: action.credentials })\r\n        //console.log(\"reducer\", newState)\r\n        return newState;\r\n    }\r\n\r\n    return collectAuthFromSession(state);\r\n}\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({ auth: authReducer });\r\n\r\nexport default rootReducer;","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}